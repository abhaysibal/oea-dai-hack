{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "syn-oea-daihackathon"
		},
		"syn-oea-daihackathon-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'syn-oea-daihackathon-WorkspaceDefaultSqlServer'"
		},
		"AzureBlobStorage_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://stoeadaihackathon.blob.core.windows.net"
		},
		"GraphVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-oea-daihackathon.vault.azure.net/"
		},
		"Microsoft Graph_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://graph.microsoft.com/beta"
		},
		"Microsoft Graph_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "9ba597aa-96e0-4297-80ac-9ce9fe9c7504"
		},
		"Microsoft Graph_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "5168b241-50f5-4d78-8cc7-890e07dbb940"
		},
		"Microsoft Graph_properties_typeProperties_aadResourceId": {
			"type": "string",
			"defaultValue": "https://graph.microsoft.com"
		},
		"syn-oea-daihackathon-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stoeadaihackathon.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Copy from REST connector into ADLS Gen2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "IngestUsersData_From_AAD",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "['@odata.nextLink']"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"blockSizeInMB": 4
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestResource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/RestResource')]",
				"[concat(variables('workspaceId'), '/datasets/json')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Ingest devices data from Graph')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "IngestDevicesData_From_AAD",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$['@odata.nextLink']"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "['id']"
										},
										"sink": {
											"name": "EntryId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "['approximateLastSignInDateTime']"
										},
										"sink": {
											"name": "LastCheckIn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "['deviceId']"
										},
										"sink": {
											"name": "DeviceId"
										}
									},
									{
										"source": {
											"path": "['displayName']"
										},
										"sink": {
											"name": "DeviceName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "['isCompliant']"
										},
										"sink": {
											"name": "Compliant",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "['isManaged']"
										},
										"sink": {
											"name": "IsManaged",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "['operatingSystem']"
										},
										"sink": {
											"name": "OS",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "['operatingSystemVersion']"
										},
										"sink": {
											"name": "OSVersion",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "['physicalIds'][0]"
										},
										"sink": {
											"name": "Ids"
										}
									},
									{
										"source": {
											"path": "['sourceType']"
										},
										"sink": {
											"name": "Ownership",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "MicrosoftGraphDevicesEndpoint",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Devices_Data_Aad_Devices",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/MicrosoftGraphDevicesEndpoint')]",
				"[concat(variables('workspaceId'), '/datasets/Devices_Data_Aad_Devices')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Ingest devices from Graph via Intune')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "IngestDevicesData_From_Intune",
						"description": "Generates a \"Devices\" report/table using Intune",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": {
									"value": "{ \n    \"reportName\": \"Devices\", \n    \"select\": [ \n        \"DeviceId\",\n        \"DeviceName\", \n        \"DeviceType\",\n        \"managementAgent\", \n        \"OwnerType\", \n        \"ComplianceState\", \n        \"PrimaryUser\", \n        \"UserId\", \n        \"UPN\", \n        \"UserEmail\", \n        \"UserName\"\n    ]\n} ",
									"type": "Expression"
								},
								"additionalHeaders": {
									"Content-Type": "application/json"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DevicesData_Intune",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DevicesData_Intune_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetClientSecret",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://kv-oea-daihackathon.vault.azure.net/secrets/graphAppClientSecret?api-version=7.2",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {},
							"linkedServices": [
								{
									"referenceName": "GraphVault",
									"type": "LinkedServiceReference"
								}
							],
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetBearerToken",
						"description": "Use this Web activity to get bearer token",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetClientSecret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://login.microsoftonline.com/178ab4db-1ad5-49ad-86a7-06a29409af8a/oauth2/token",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@grant_type=client_credentials&client_id=9ba597aa-96e0-4297-80ac-9ce9fe9c7504&resource=https://graph.microsoft.com&client_secret=activity('GetClientSecret').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DevicesData_Intune')]",
				"[concat(variables('workspaceId'), '/datasets/DevicesData_Intune_CSV')]",
				"[concat(variables('workspaceId'), '/linkedServices/GraphVault')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Ingest users from Microsoft Graph')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "IngestUsersData_From_AAD",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$['@odata.nextLink']"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "['givenName']"
										},
										"sink": {
											"name": "givenName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "['surname']"
										},
										"sink": {
											"name": "surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "['userPrincipalName']"
										},
										"sink": {
											"name": "userPrincipalName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "['id']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/RestResource')]",
				"[concat(variables('workspaceId'), '/datasets/CSV')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CSV')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "users.csv",
						"folderPath": "m365/AAD/users",
						"container": "stage1np"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "{\"@odata.context\":\"https://graph.microsoft.com/v1.0/$metadata#users\"",
						"type": "String"
					},
					{
						"name": "\"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/users?$skiptoken=RFNwdAIAAQAAACI6a2V2aW5AY29udG9zb2lzZDMub25taWNyb3NvZnQuY29tKVVzZXJfZWEyY2JkNzYtY2ZlZC00YzI4LWE5NjAtZmY3MjM3NmQyYzU2uQAAAAAAAAAAAAA\"",
						"type": "String"
					},
					{
						"name": "\"value\":[{\"businessPhones\":[]",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Abigail Long\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Abigail\"4",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null5",
						"type": "String"
					},
					{
						"name": "\"mail\":\"abigaillong3@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null7",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null8",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"9",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Long\"10",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"abigaillong3@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"0d444980-3123-46f4-85d3-6f49e4619ea5\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]13",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Abigail Smith\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Abigail\"15",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null16",
						"type": "String"
					},
					{
						"name": "\"mail\":\"abigailsmith35@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null18",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null19",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"20",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Smith\"21",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"abigailsmith35@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"c19234e7-a816-41af-9524-4be4092fc559\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]24",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Abhay Sibal\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null26",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null27",
						"type": "String"
					},
					{
						"name": "\"mail\":\"abhay.sibal@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null29",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null30",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null31",
						"type": "String"
					},
					{
						"name": "\"surname\":null32",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"abhay.sibal_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"9a994753-6e9f-44f8-b9eb-e6d034456702\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[\"404-3755713\"]",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Global Admin\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Global\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null38",
						"type": "String"
					},
					{
						"name": "\"mail\":\"admin@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null40",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null41",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en\"",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Admin\"43",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"admin@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"7951c64a-b45d-4adb-8842-5e7ab60d17e1\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]46",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Adrian Jordan\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Adrian\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null49",
						"type": "String"
					},
					{
						"name": "\"mail\":\"adrianjordan15@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null51",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null52",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"53",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Jordan\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"adrianjordan15@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"7a2ca37f-d1f3-4be8-8abe-8711d4eea8d6\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]57",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Abhinav Gundapaneni\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null59",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null60",
						"type": "String"
					},
					{
						"name": "\"mail\":\"agundapaneni@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null62",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null63",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null64",
						"type": "String"
					},
					{
						"name": "\"surname\":null65",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"agundapaneni_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"34b26f30-cbfc-47ec-9131-27fef4433705\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]68",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Amanda Long\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Amanda\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null71",
						"type": "String"
					},
					{
						"name": "\"mail\":\"amandalong47@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null73",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null74",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"75",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Long\"76",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"amandalong47@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"154f2b2c-9e73-4ecc-917e-06c0e440ea15\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]79",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Amber Berger\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Amber\"81",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null82",
						"type": "String"
					},
					{
						"name": "\"mail\":\"amberberger79@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null84",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null85",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"86",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Berger\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"amberberger79@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"dbc10b91-8d2c-4cf2-ac08-985ad3b4d6b4\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]90",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Amber Buchanan\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Amber\"92",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null93",
						"type": "String"
					},
					{
						"name": "\"mail\":\"amberbuchanan5@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null95",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null96",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"97",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Buchanan\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"amberbuchanan5@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"3f901837-788d-407b-b6e5-3dd9018011fe\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]101",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Amber Cook\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Amber\"103",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null104",
						"type": "String"
					},
					{
						"name": "\"mail\":\"ambercook62@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null106",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null107",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"108",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Cook\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"ambercook62@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"8ec9eba7-aab5-4f79-b798-47320dbbef0d\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]112",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Amy Price\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Amy\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null115",
						"type": "String"
					},
					{
						"name": "\"mail\":\"amyprice29@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null117",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null118",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"119",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Price\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"amyprice29@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"ce02f59b-7ab4-426d-be15-f831bef543a8\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]123",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Andrea Berry\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Andrea\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null126",
						"type": "String"
					},
					{
						"name": "\"mail\":\"andreaberry63@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null128",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null129",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"130",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Berry\"131",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"andreaberry63@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"1e9fb7e6-a12b-43d9-bf5a-c0c832226db8\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]134",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Andrew Hunter\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Andrew\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null137",
						"type": "String"
					},
					{
						"name": "\"mail\":\"andrewhunter25@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null139",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null140",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"141",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Hunter\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"andrewhunter25@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"ebdecc9f-bfd9-4a32-bc62-07554666ec00\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]145",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Angela Baxter\"146",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Angela\"147",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null148",
						"type": "String"
					},
					{
						"name": "\"mail\":\"angelabaxter12@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null150",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null151",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"152",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Baxter\"153",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"angelabaxter12@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"7a9b1487-4120-40e9-bca4-b71204f2f4f4\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]156",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Angela Baxter\"157",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Angela\"158",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null159",
						"type": "String"
					},
					{
						"name": "\"mail\":\"angelabaxter71@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null161",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null162",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"163",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Baxter\"164",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"angelabaxter71@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"d2f7bcc8-36e5-4818-87cd-d04cb270043d\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]167",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Angelica Reid\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Angelica\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null170",
						"type": "String"
					},
					{
						"name": "\"mail\":\"angelicareid88@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null172",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null173",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"174",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Reid\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"angelicareid88@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"9a34c2da-5427-47fd-bdba-e6ff18bd69e6\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]178",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Anna Alvarado\"179",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Anna\"180",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null181",
						"type": "String"
					},
					{
						"name": "\"mail\":\"annaalvarado10@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null183",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null184",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"185",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Alvarado\"186",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"annaalvarado10@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"e56dc664-e223-4616-a43e-4d947fdbc147\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]189",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Anna Alvarado\"190",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Anna\"191",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null192",
						"type": "String"
					},
					{
						"name": "\"mail\":\"annaalvarado60@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null194",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null195",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"196",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Alvarado\"197",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"annaalvarado60@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"09a9ef8f-81bb-44d0-8ca9-d276b327b668\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]200",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Antonio Wong\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null202",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null203",
						"type": "String"
					},
					{
						"name": "\"mail\":\"antoniow@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null205",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null206",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null207",
						"type": "String"
					},
					{
						"name": "\"surname\":null208",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"antoniow_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"14277dbd-797c-4e2b-b9df-21038d61d35c\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]211",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Aryaman Maheshwari\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null213",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null214",
						"type": "String"
					},
					{
						"name": "\"mail\":\"aryamanm@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null216",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null217",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null218",
						"type": "String"
					},
					{
						"name": "\"surname\":null219",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"aryamanm_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"6c1b21f7-0c9b-4b34-be34-344f9db4180f\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]222",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Ashley Todd\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Ashley\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null225",
						"type": "String"
					},
					{
						"name": "\"mail\":\"ashleytodd20@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null227",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null228",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"229",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Todd\"230",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"ashleytodd20@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"1025c902-186f-4830-99b8-7371aa098713\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]233",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"TJ Vering\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"TJ\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null236",
						"type": "String"
					},
					{
						"name": "\"mail\":\"avering@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null238",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null239",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null240",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Vering\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"avering_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"3480cc7b-7058-4a5c-8ee6-d650658abb95\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]244",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Ayron Johnson\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null246",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null247",
						"type": "String"
					},
					{
						"name": "\"mail\":\"ayron.johnson@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null249",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null250",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null251",
						"type": "String"
					},
					{
						"name": "\"surname\":null252",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"ayron.johnson_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"3168652c-5578-4829-8b28-4d4f8b7a1d09\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]255",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Ben Welte\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Ben\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null258",
						"type": "String"
					},
					{
						"name": "\"mail\":null259",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null260",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null261",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null262",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Welte\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"ben@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"e04ebc4d-1ee4-41d2-8bb4-0368309b3b86\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]266",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Benjamin Harrison\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Benjamin\"268",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null269",
						"type": "String"
					},
					{
						"name": "\"mail\":\"benjaminharrison99@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null271",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null272",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"273",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Harrison\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"benjaminharrison99@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"31e77507-723e-455f-87cf-17cf92c7aa2d\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]277",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Benjamin Robinson\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Benjamin\"279",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null280",
						"type": "String"
					},
					{
						"name": "\"mail\":\"benjaminrobinson18@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null282",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null283",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"284",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Robinson\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"benjaminrobinson18@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"82b52bce-f627-4d59-89d8-aa23704973ac\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]288",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Benny Ng\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null290",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null291",
						"type": "String"
					},
					{
						"name": "\"mail\":\"bennyng@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null293",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null294",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null295",
						"type": "String"
					},
					{
						"name": "\"surname\":null296",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"bennyng_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"b5e656e0-7eb4-415d-b776-bf9a7e2f8615\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]299",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Bradley Dickerson\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Bradley\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null302",
						"type": "String"
					},
					{
						"name": "\"mail\":\"bradleydickerson94@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null304",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null305",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"306",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Dickerson\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"bradleydickerson94@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"1215c504-0655-407d-937b-446221674cb9\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]310",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Brady Pacheco\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Brady\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null313",
						"type": "String"
					},
					{
						"name": "\"mail\":\"bradypacheco28@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null315",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null316",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"317",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Pacheco\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"bradypacheco28@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"a6f778a9-59b5-41a8-8903-3a50b9eee025\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]321",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Brandon Ellis\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Brandon\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null324",
						"type": "String"
					},
					{
						"name": "\"mail\":\"brandonellis68@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null326",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null327",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"328",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Ellis\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"brandonellis68@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"9a966183-81c0-4307-b636-83fb7795d2c6\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]332",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Brian Mcdonald\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Brian\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null335",
						"type": "String"
					},
					{
						"name": "\"mail\":\"brianmcdonald86@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null337",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null338",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"339",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Mcdonald\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"brianmcdonald86@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"55101d32-9d0c-46d8-b573-20062bf68019\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]343",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Bryan Schafer\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null345",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null346",
						"type": "String"
					},
					{
						"name": "\"mail\":\"bryan.schafer@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null348",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null349",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null350",
						"type": "String"
					},
					{
						"name": "\"surname\":null351",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"bryan.schafer_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"08ea1531-7cef-4158-800f-35c836852d73\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]354",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Bryan Alvarado\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null356",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null357",
						"type": "String"
					},
					{
						"name": "\"mail\":\"bryan.alvarado@fresnounified.org\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null359",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null360",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null361",
						"type": "String"
					},
					{
						"name": "\"surname\":null362",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"bryan.alvarado_fresnounified.org#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"49b2c93f-a7af-4240-b9a8-c2310ebc5d2e\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]365",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Bryan\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null367",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null368",
						"type": "String"
					},
					{
						"name": "\"mail\":null369",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null370",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null371",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null372",
						"type": "String"
					},
					{
						"name": "\"surname\":null373",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"bryan@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"ad65249f-90db-4618-9e5d-076adb2dd474\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]376",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Caitlin Guerrero\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Caitlin\"378",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null379",
						"type": "String"
					},
					{
						"name": "\"mail\":\"caitlinguerrero89@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null381",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null382",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"383",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Guerrero\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"caitlinguerrero89@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"eaad4b47-cc42-44ef-9b04-57487d6cb338\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]387",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Caitlin Peters\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Caitlin\"389",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null390",
						"type": "String"
					},
					{
						"name": "\"mail\":\"caitlinpeters61@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null392",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null393",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"394",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Peters\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"caitlinpeters61@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"307f3485-fd38-4752-9bcf-e9a10a73c3b0\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]398",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Caroline Quigg\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null400",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null401",
						"type": "String"
					},
					{
						"name": "\"mail\":\"caroline.quigg@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null403",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null404",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null405",
						"type": "String"
					},
					{
						"name": "\"surname\":null406",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"caroline.quigg_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"cf214316-bbd6-4aa6-9375-50306a6d840f\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]409",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"chad.vidden\"410",
						"type": "String"
					},
					{
						"name": "\"givenName\":null411",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null412",
						"type": "String"
					},
					{
						"name": "\"mail\":\"chad.vidden@gmail.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null414",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null415",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null416",
						"type": "String"
					},
					{
						"name": "\"surname\":null417",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"chad.vidden_gmail.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"6b9d6fd4-e3c8-4d3e-9143-ce84adedec42\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]420",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"chad.vidden\"421",
						"type": "String"
					},
					{
						"name": "\"givenName\":null422",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null423",
						"type": "String"
					},
					{
						"name": "\"mail\":\"chad.vidden@teamkwantum.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null425",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null426",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null427",
						"type": "String"
					},
					{
						"name": "\"surname\":null428",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"chad.vidden_teamkwantum.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"b3c02039-5ee0-4656-b38c-fa2d37b66123\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]431",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"chad\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Chad\"433",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null434",
						"type": "String"
					},
					{
						"name": "\"mail\":\"chad@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null436",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null437",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null438",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Vidden\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"chad@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"f0e87250-1612-4ec8-a56e-cd6ed66efa16\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]442",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Chad Jones\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Chad\"444",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null445",
						"type": "String"
					},
					{
						"name": "\"mail\":\"chadjones8@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null447",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null448",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"449",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Jones\"450",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"chadjones8@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"2315b764-f8b9-4c0b-b794-ab0b804e5d90\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]453",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Christina Hanna\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Christina\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null456",
						"type": "String"
					},
					{
						"name": "\"mail\":\"christinahanna78@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null458",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null459",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"460",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Hanna\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"christinahanna78@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"e90a9854-9ffc-4fbc-aced-4e131dfc21d4\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]464",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Cody Briggs\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Cody\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null467",
						"type": "String"
					},
					{
						"name": "\"mail\":\"codybriggs55@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null469",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null470",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"471",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Briggs\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"codybriggs55@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"d97087d8-a856-4603-a1b6-e33361a8161c\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]475",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Christian Stohlmann\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Christian\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null478",
						"type": "String"
					},
					{
						"name": "\"mail\":\"cstohlmann@teamkwantum.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null480",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null481",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null482",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Stohlman\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"cstohlmann_teamkwantum.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"f8fe5df7-114b-4181-852a-c8b82ae7cdfa\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]486",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Curtis Todd\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Curtis\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null489",
						"type": "String"
					},
					{
						"name": "\"mail\":\"curtistodd42@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null491",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null492",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"493",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Todd\"494",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"curtistodd42@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"1509d244-beb2-4bc8-a2bd-191b5c9250fb\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]497",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Cyhana Williams\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null499",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null500",
						"type": "String"
					},
					{
						"name": "\"mail\":\"cwilliams@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null502",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null503",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null504",
						"type": "String"
					},
					{
						"name": "\"surname\":null505",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"cwilliams_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"77b78bac-340e-4f27-bb9b-a5c214d069fe\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]508",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Cynthia Dunn\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Cynthia\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null511",
						"type": "String"
					},
					{
						"name": "\"mail\":\"cynthiadunn8@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null513",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null514",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"515",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Dunn\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"cynthiadunn8@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"9437c4fb-ccb3-4762-afb8-552b276b909f\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]519",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"David Taylor\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"David\"521",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null522",
						"type": "String"
					},
					{
						"name": "\"mail\":\"davidtaylor44@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null524",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null525",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"526",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Taylor\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"davidtaylor44@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"0488ddf1-959f-428b-846f-de2f7eb1c958\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]530",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"David West\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"David\"532",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null533",
						"type": "String"
					},
					{
						"name": "\"mail\":\"davidwest41@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null535",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null536",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"537",
						"type": "String"
					},
					{
						"name": "\"surname\":\"West\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"davidwest41@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"040d69e0-7a0c-4488-862b-355eef68e433\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]541",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Debra Smith\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Debra\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null544",
						"type": "String"
					},
					{
						"name": "\"mail\":\"debrasmith1@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null546",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null547",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"548",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Smith\"549",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"debrasmith1@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"5ddbce29-3ab9-405d-9350-05945a8a8542\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]552",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Denise Estrada\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Denise\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null555",
						"type": "String"
					},
					{
						"name": "\"mail\":\"deniseestrada93@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null557",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null558",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"559",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Estrada\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"deniseestrada93@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"25acb67b-767e-47a0-a9d0-45c81118fe1b\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]563",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Derek Developer\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Derek\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null566",
						"type": "String"
					},
					{
						"name": "\"mail\":null567",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null568",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null569",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null570",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Developer\"571",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"derek@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"69e1e05a-11b8-4ca7-b632-e9eb34789526\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]574",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Devin Developer\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Devin\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":\"Developer\"",
						"type": "String"
					},
					{
						"name": "\"mail\":\"devin@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null579",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null580",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null581",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Developer\"582",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"devin@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"69340247-e313-4000-8aab-081673e256a0\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]585",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Daniel Sitton\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null587",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null588",
						"type": "String"
					},
					{
						"name": "\"mail\":\"dsitton@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null590",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null591",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null592",
						"type": "String"
					},
					{
						"name": "\"surname\":null593",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"dsitton_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"8e075469-ee3f-4c83-87b3-b3d81c8b3c62\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]596",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Edward Johnson\"597",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Edward\"598",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null599",
						"type": "String"
					},
					{
						"name": "\"mail\":\"edwardjohnson16@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null601",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null602",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"603",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Johnson\"604",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"edwardjohnson16@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"4c9d48ad-fcf6-41de-8233-c7ccaf87ba86\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]607",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Edward Johnson\"608",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Edward\"609",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null610",
						"type": "String"
					},
					{
						"name": "\"mail\":\"edwardjohnson95@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null612",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null613",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"614",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Johnson\"615",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"edwardjohnson95@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"6cbb6b3a-dc35-4c0e-a171-825f466d116d\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]618",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Elizabeth King\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Elizabeth\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null621",
						"type": "String"
					},
					{
						"name": "\"mail\":\"elizabethking17@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null623",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null624",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"625",
						"type": "String"
					},
					{
						"name": "\"surname\":\"King\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"elizabethking17@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"73bac42c-7c17-4951-83e8-4d743945fe0d\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]629",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Eric Kuhn\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null631",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null632",
						"type": "String"
					},
					{
						"name": "\"mail\":\"ERKUHN@MICROSOFT.COM\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null634",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null635",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null636",
						"type": "String"
					},
					{
						"name": "\"surname\":null637",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"ERKUHN_MICROSOFT.COM#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"36f546b4-d70c-4c00-b181-fe2d9d65136f\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]640",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Ernest Anderson\"641",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Ernest\"642",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null643",
						"type": "String"
					},
					{
						"name": "\"mail\":\"ernestanderson59@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null645",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null646",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"647",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Anderson\"648",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"ernestanderson59@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"df53f848-85ef-438d-ada3-366c70fe03a0\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]651",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Ernest Anderson\"652",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Ernest\"653",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null654",
						"type": "String"
					},
					{
						"name": "\"mail\":\"ernestanderson9@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null656",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null657",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"658",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Anderson\"659",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"ernestanderson9@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"9ee3ea0f-a410-46fd-a458-98867a6d3e60\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]662",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Gene Garcia\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Gene\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null665",
						"type": "String"
					},
					{
						"name": "\"mail\":\"gene.garcia@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null667",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null668",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null669",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Garcia\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"gene.garcia_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"f56f51dd-0953-4e53-87b7-aaa1e97369a2\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]673",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Gabriel Dudley\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Gabriel\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null676",
						"type": "String"
					},
					{
						"name": "\"mail\":\"gabrieldudley27@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null678",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null679",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"680",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Dudley\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"gabrieldudley27@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"bfe29fcb-b734-4075-a026-8d9a6a3ca3f1\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]684",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"gabriella.stein\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null686",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null687",
						"type": "String"
					},
					{
						"name": "\"mail\":\"gabriella.stein@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null689",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null690",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null691",
						"type": "String"
					},
					{
						"name": "\"surname\":null692",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"gabriella.stein_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"d4b9cf37-55dc-45a7-a6f9-e92b335b3c61\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]695",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Gloria Fowler\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Gloria\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null698",
						"type": "String"
					},
					{
						"name": "\"mail\":\"gloriafowler49@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null700",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null701",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"702",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Fowler\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"gloriafowler49@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"000e024d-0cd4-41e8-8fe5-8f81e65930a7\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]706",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Guillermo Proano\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null708",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null709",
						"type": "String"
					},
					{
						"name": "\"mail\":\"gproano@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null711",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null712",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null713",
						"type": "String"
					},
					{
						"name": "\"surname\":null714",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"gproano_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"9aa7215d-9106-491c-a381-0fadcd79434f\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]717",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Hayley Davis\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Hayley\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null720",
						"type": "String"
					},
					{
						"name": "\"mail\":\"hayleydavis7@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null722",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null723",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"724",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Davis\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"hayleydavis7@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"1b5692f5-f0e2-4366-b547-67c826a7069c\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]728",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Heather Armstrong\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Heather\"730",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null731",
						"type": "String"
					},
					{
						"name": "\"mail\":\"heatherarmstrong100@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null733",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null734",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"735",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Armstrong\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"heatherarmstrong100@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"f5ac7885-68fe-4410-8e59-0786b78cb6cd\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]739",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Heather Lewis\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Heather\"741",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null742",
						"type": "String"
					},
					{
						"name": "\"mail\":\"heatherlewis80@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null744",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null745",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"746",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Lewis\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"heatherlewis80@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"d7ffb82b-93cf-42ae-9c03-a8070aa02fea\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]750",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Ivy Barley\"751",
						"type": "String"
					},
					{
						"name": "\"givenName\":null752",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null753",
						"type": "String"
					},
					{
						"name": "\"mail\":\"ivbarley@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null755",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null756",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null757",
						"type": "String"
					},
					{
						"name": "\"surname\":null758",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"ivbarley_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"b3ba51b9-59bb-40f2-8525-afe8ac7dc2c7\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]761",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Ivy Barley\"762",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Ivy\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null764",
						"type": "String"
					},
					{
						"name": "\"mail\":\"ivybarley@win-edu.org\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null766",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null767",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null768",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Barley\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"ivybarley_win-edu.org#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"879ce3b4-209a-4610-b048-2d5772ece50f\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]772",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jacob Olson\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Jacob\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null775",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jacobolson38@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null777",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null778",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"779",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Olson\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jacobolson38@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"8d880b47-bbfe-4ed9-ba1c-431231968fc2\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]783",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jacqueline Cole\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Jacqueline\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null786",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jacquelinecole23@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null788",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null789",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"790",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Cole\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jacquelinecole23@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"ecfa4219-2dea-4a7b-b95f-ecf2d84e8741\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]794",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"James Jones\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"James\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null797",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jamesjones37@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null799",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null800",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"801",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Jones\"802",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jamesjones37@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"ca4d66bc-a74c-4a10-8140-0c9c60c85605\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]805",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jamie Nunez\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Jamie\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null808",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jamienunez84@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null810",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null811",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"812",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Nunez\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jamienunez84@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"18fe2e31-2381-469d-b217-8f8225b06e21\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]816",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jason Eaton\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Jason\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null819",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jasoneaton73@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null821",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null822",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"823",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Eaton\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jasoneaton73@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"29343f3d-7faa-4a3c-940a-fa67cfe1faf0\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]827",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jeff Frye\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Jeff\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null830",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jefffrye17@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null832",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null833",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"834",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Frye\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jefffrye17@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"73cd0349-7d36-43ed-a4ce-4545af382a74\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]838",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jenna Hong\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null840",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null841",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jenna.hong@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null843",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null844",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null845",
						"type": "String"
					},
					{
						"name": "\"surname\":null846",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jenna.hong_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"7ff995d4-4bf0-4984-8bf1-6bb08a74ef22\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]849",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jennifer Davenport\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Jennifer\"851",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null852",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jenniferdavenport34@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null854",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null855",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"856",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Davenport\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jenniferdavenport34@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"018e0abc-4d78-432c-92d2-deebbb8ffed4\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]860",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jennifer Mayer\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Jennifer\"862",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null863",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jennifermayer2@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null865",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null866",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"867",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Mayer\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jennifermayer2@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"ae4a3564-8c52-45e5-bc81-2168d922724e\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]871",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jennifer Sanders\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Jennifer\"873",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null874",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jennifersanders58@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null876",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null877",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"878",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Sanders\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jennifersanders58@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"db1de33f-90d2-4ab5-9b19-83952eef4d46\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]882",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jeremy Wright\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Jeremy\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null885",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jeremywright52@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null887",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null888",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"889",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Wright\"890",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jeremywright52@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"c6b7571c-e4f6-45aa-bc6f-b919821c4596\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]893",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jessica Edwards\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Jessica\"895",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null896",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jessicaedwards33@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null898",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null899",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"900",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Edwards\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jessicaedwards33@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"0d2b8f67-3fc0-43d9-81dc-749b428bd86e\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]904",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jessica Kim\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Jessica\"906",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null907",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jessicakim96@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null909",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null910",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"911",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Kim\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jessicakim96@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"8c0795f5-4c07-42eb-8db3-efd3421b6fb3\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]915",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jessica Short\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Jessica\"917",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null918",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jessicashort3@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null920",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null921",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"922",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Short\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jessicashort3@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"0f46ea9e-838a-4ea3-a1b6-2c1b6771fd43\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]926",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jessica Underwood\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Jessica\"928",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null929",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jessicaunderwood82@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null931",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null932",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"933",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Underwood\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jessicaunderwood82@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"36fdfe50-f2eb-4cc0-873d-a7f6bd18c18b\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]937",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jessica Wright\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Jessica\"939",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null940",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jessicawright13@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null942",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null943",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"944",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Wright\"945",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jessicawright13@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"e2cf591a-2b99-4309-9ec9-7408ea84df8d\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]948",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jessica Walton\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null950",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null951",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jeswalton@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null953",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null954",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null955",
						"type": "String"
					},
					{
						"name": "\"surname\":null956",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jeswalton_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"c6cdd01d-c7d3-4905-8b42-02c4e1b827b3\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]959",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Jason Morales\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null961",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null962",
						"type": "String"
					},
					{
						"name": "\"mail\":\"jmorale@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null964",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null965",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null966",
						"type": "String"
					},
					{
						"name": "\"surname\":null967",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"jmorale_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"a3b8ad3d-290b-46c0-bf49-97ec537217eb\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]970",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Joe Admin\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Joe\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null973",
						"type": "String"
					},
					{
						"name": "\"mail\":\"joe@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null975",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null976",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"977",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Admin\"978",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"joe@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"c7666172-c032-4631-bffd-8a53d6279240\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]981",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"John Berry\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"John\"983",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null984",
						"type": "String"
					},
					{
						"name": "\"mail\":\"johnberry36@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null986",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null987",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"988",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Berry\"989",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"johnberry36@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"8558f145-b1c2-4105-9f7d-4114644327ec\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]992",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"John Brown\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"John\"994",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null995",
						"type": "String"
					},
					{
						"name": "\"mail\":\"johnbrown31@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null997",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null998",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"999",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Brown\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"johnbrown31@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"6ad127ca-1ef1-48d7-b585-90ce444add17\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]1003",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"John Hampton\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"John\"1005",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null1006",
						"type": "String"
					},
					{
						"name": "\"mail\":\"johnhampton54@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null1008",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null1009",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"1010",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Hampton\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"johnhampton54@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"013cfcec-4bc7-4bfb-b0ae-fe804ca0b4aa\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]1014",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Johnny Smith\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Johnny\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null1017",
						"type": "String"
					},
					{
						"name": "\"mail\":\"johnnysmith40@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null1019",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null1020",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"1021",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Smith\"1022",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"johnnysmith40@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"c53f34e0-e1ca-4f1f-8d2c-67d72d027b71\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]1025",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Joseph Kelley\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Joseph\"1027",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null1028",
						"type": "String"
					},
					{
						"name": "\"mail\":\"josephkelley4@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null1030",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null1031",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"1032",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Kelley\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"josephkelley4@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"86d91ce9-fca9-4ff1-9f40-79d6c5f55522\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]1036",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Joseph Lynch\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Joseph\"1038",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null1039",
						"type": "String"
					},
					{
						"name": "\"mail\":\"josephlynch26@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null1041",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null1042",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"1043",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Lynch\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"josephlynch26@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"0f91263c-b735-44f9-af2c-5da57e098bfa\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]1047",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Joseph Terrell\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Joseph\"1049",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null1050",
						"type": "String"
					},
					{
						"name": "\"mail\":\"josephterrell50@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null1052",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null1053",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"1054",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Terrell\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"josephterrell50@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"1c21ab08-eed0-4cc2-9295-02cbc0a26e28\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]1058",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Joshua Elliott\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Joshua\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null1061",
						"type": "String"
					},
					{
						"name": "\"mail\":\"joshuaelliott18@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null1063",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null1064",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"1065",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Elliott\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"joshuaelliott18@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"cf62b4d9-796c-4c1e-abed-37d4c1f34b9a\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]1069",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Justin Cooper\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Justin\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null1072",
						"type": "String"
					},
					{
						"name": "\"mail\":\"justincooper74@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null1074",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null1075",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"1076",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Cooper\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"justincooper74@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"09425a23-ccd1-4c06-8bfd-519a82472435\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]1080",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Karthikeyan Kumar\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":null1082",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null1083",
						"type": "String"
					},
					{
						"name": "\"mail\":\"karthikeyan.kumar@microsoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null1085",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null1086",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":null1087",
						"type": "String"
					},
					{
						"name": "\"surname\":null1088",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"karthikeyan.kumar_microsoft.com#EXT#@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"34d7a166-aa51-4003-9bfe-22f1a699e0fa\"}",
						"type": "String"
					},
					{
						"name": "{\"businessPhones\":[]1091",
						"type": "String"
					},
					{
						"name": "\"displayName\":\"Kevin Wiggen\"",
						"type": "String"
					},
					{
						"name": "\"givenName\":\"Kevin\"",
						"type": "String"
					},
					{
						"name": "\"jobTitle\":null1094",
						"type": "String"
					},
					{
						"name": "\"mail\":\"kevin@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"mobilePhone\":null1096",
						"type": "String"
					},
					{
						"name": "\"officeLocation\":null1097",
						"type": "String"
					},
					{
						"name": "\"preferredLanguage\":\"en-US\"1098",
						"type": "String"
					},
					{
						"name": "\"surname\":\"Wiggen\"",
						"type": "String"
					},
					{
						"name": "\"userPrincipalName\":\"kevin@contosoisd3.onmicrosoft.com\"",
						"type": "String"
					},
					{
						"name": "\"id\":\"ea2cbd76-cfed-4c28-a960-ff72376d2c56\"}]}",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DevicesData_Intune')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Microsoft Graph",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Devices Integration Data (Intune)"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "/beta/deviceManagement/reports/exportJobs",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/Microsoft Graph')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DevicesData_Intune_CSV')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "syn-oea-daihackathon-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Devices Integration Data (Intune)"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "devices.csv",
							"type": "Expression"
						},
						"folderPath": "m365/intune/devices",
						"fileSystem": "stage1np"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EntryId",
						"type": "String"
					},
					{
						"name": "LastCheckIn",
						"type": "String"
					},
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "DeviceName",
						"type": "String"
					},
					{
						"name": "Compliant",
						"type": "String"
					},
					{
						"name": "OS",
						"type": "String"
					},
					{
						"name": "OSVersion",
						"type": "String"
					},
					{
						"name": "Ownership",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/syn-oea-daihackathon-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Devices_Data_Aad_Devices')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "devices.csv",
						"folderPath": "m365/AAD/devices",
						"container": "stage1np"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EntryId",
						"type": "String"
					},
					{
						"name": "LastCheckIn",
						"type": "String"
					},
					{
						"name": "DeviceId",
						"type": "String"
					},
					{
						"name": "DeviceName",
						"type": "String"
					},
					{
						"name": "Compliant",
						"type": "String"
					},
					{
						"name": "IsManaged",
						"type": "String"
					},
					{
						"name": "OS",
						"type": "String"
					},
					{
						"name": "OSVersion",
						"type": "String"
					},
					{
						"name": "Ids",
						"type": "String"
					},
					{
						"name": "Ownership",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MicrosoftGraphDevicesEndpoint')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Connector to the /devices endpoint",
				"linkedServiceName": {
					"referenceName": "Microsoft Graph",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "/v1.0/devices"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/Microsoft Graph')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/RestResource')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Connection to your REST/HTTP",
				"linkedServiceName": {
					"referenceName": "Microsoft Graph",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "/v1.0/users?$select=givenName,surname,userPrincipalName,id",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/Microsoft Graph')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/RestResource1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Connection to your REST/HTTP",
				"linkedServiceName": {
					"referenceName": "Microsoft Graph",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "v1.0/users",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/Microsoft Graph')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/data_lake_binary')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filesystem": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "OEA Framework"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/data_lake_csv')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filesystem": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "OEA Framework"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/json')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "syn-oea-daihackathon-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "users.json",
						"folderPath": "m365/AAD/users",
						"fileSystem": "stage1np"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/syn-oea-daihackathon-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/json1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "users.json",
						"folderPath": "m365/AAD/users",
						"container": "stage1np"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureBlobStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('AzureBlobStorage_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GraphVault')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('GraphVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Microsoft Graph')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "The linked service to access microsoft graph",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Microsoft Graph_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "AadServicePrincipal",
					"servicePrincipalId": "[parameters('Microsoft Graph_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "GraphVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "graphAppClientSecret"
					},
					"tenant": "[parameters('Microsoft Graph_properties_typeProperties_tenant')]",
					"aadResourceId": "[parameters('Microsoft Graph_properties_typeProperties_aadResourceId')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/GraphVault')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/syn-oea-daihackathon-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('syn-oea-daihackathon-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/syn-oea-daihackathon-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('syn-oea-daihackathon-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT * from [s2_]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "s2_m365_intune",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT * FROM [s2_m365_intune].[dbo].[aad_devices]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "s2_m365_intune",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 3')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [EntryId]\n,[LastCheckIn]\n,[DeviceId]\n,[DeviceName]\n,[Compliant]\n,[IsManaged]\n,[OS]\n,[OSVersion]\n,[Ids]\n,[Ownership]\n,[OwnerIdentifier]\n FROM [s2_m365_intune].[dbo].[aad_devices]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "s2_m365_intune",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 4')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [Id]\n,[Identifier]\n,[Description]\n,[RefIdentifierTypeId]\n,[ExternalId]\n,[CreateDate]\n,[LastModifiedDate]\n,[IsActive]\n,[PersonId]\n,[SourceSystemId]\n FROM [s2_m365_intune].[dbo].[personidentifier]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "s2_m365_intune",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script to join al devices and SIS data')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT * FROM\n[s2_m365_intune].[dbo].[aad_users] u\nJOIN [s2_m365_intune].[dbo].[aad_devices] d\nON d.OwnerIdentifier = u.id\nJOIN [s2_m365_intune].[dbo].[studentdemographics] sd\nON sd.Identifier = userPrincipalName",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "s2_m365_intune_test",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AAD_Processor')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "spark3p1sm",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 4,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "4",
						"spark.dynamicAllocation.maxExecutors": "4"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/7b9a4896-4541-483f-bdc7-d8f4ec6be3ee/resourceGroups/rg-oea-daihackathon/providers/Microsoft.Synapse/workspaces/syn-oea-daihackathon/bigDataPools/spark3p1sm",
						"name": "spark3p1sm",
						"type": "Spark",
						"endpoint": "https://syn-oea-daihackathon.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark3p1sm",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.1",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"%run /OEA_py"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"%run /example_modules_py"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"import pyspark.sql.functions as f\r\n",
							"\r\n",
							"class IntuneAADPackage(BaseOEAModule):\r\n",
							"    # Defines the intune data processing module.\r\n",
							"    def __init__(self, oea, source_folder='m365'):\r\n",
							"\r\n",
							"        BaseOEAModule.__init__(self, oea, source_folder)\r\n",
							"\r\n",
							"        self.stage1np_aad = self.stage1np + '/AAD'\r\n",
							"\r\n",
							"        self.schemas['AAD_Devices'] =  [['EntryId','string','no-op'],\r\n",
							"                                        ['LastCheckIn','string','no-op'],\r\n",
							"                                        ['DeviceId','string','hash'],\r\n",
							"                                        ['DeviceName','string','no-op'],\r\n",
							"                                        ['Compliant','string','no-op'],\r\n",
							"                                        ['IsManaged','string','no-op'],\r\n",
							"                                        ['OS','string','no-op'],\r\n",
							"                                        ['OSVersion','string','no-op'],\r\n",
							"                                        ['Ids','string','no-op'],\r\n",
							"                                        ['Ownership','string','no-op']]\r\n",
							"\r\n",
							"        self.schemas['AAD_Users'] = [['givenName', 'string', 'no-op'],\r\n",
							"                                    ['surname', 'string', 'no-op'],\r\n",
							"                                    ['userPrincipalName', 'string', 'hash'],\r\n",
							"                                    ['id', 'string', 'hash']]\r\n",
							"\r\n",
							"    def process_devices_data_from_stage1(self):        \r\n",
							"        logger.info(\"Processing Azure AD Device data from: \" + self.stage1np)\r\n",
							"        spark_schema = self.oea.to_spark_schema(self.schemas['AAD_Devices'])\r\n",
							"        df = spark.read.csv(self.stage1np_aad + '/devices/devices.csv', header='true', schema=spark_schema)\r\n",
							"        df = df.dropDuplicates(['DeviceId'])\r\n",
							"        df = df.withColumn(\"OwnerIdentifier\", f.regexp_extract(df[\"Ids\"], \"GID]:(.*):\", 1))\r\n",
							"        df.coalesce(1).write.format('parquet').mode('overwrite').option(\"mergeSchema\", \"true\").save(self.stage2np + '/aad/devices')\r\n",
							"\r\n",
							"        logger.info(\"Processing Azure AD users data from: \" + self.stage1np)\r\n",
							"        spark_schema = self.oea.to_spark_schema(self.schemas['AAD_Users'])\r\n",
							"        df = spark.read.csv(self.stage1np_aad + '/users/users.csv', header='true', schema=spark_schema)\r\n",
							"        df = df.dropDuplicates(['id'])\r\n",
							"        df.coalesce(1).write.format('parquet').mode('overwrite').option(\"mergeSchema\", \"true\").save(self.stage2np + '/aad/users')\r\n",
							"\r\n",
							"\r\n",
							"\r\n",
							""
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"oea = OEA()\r\n",
							"intune_aad = IntuneAADPackage(oea)"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"intune_aad.process_devices_data_from_stage1()"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.intune_devices using PARQUET location '\" + oea.stage2np + \"/m365/intune/devices'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.aad_devices using PARQUET location '\" + oea.stage2np + \"/m365/aad/devices'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.aad_users using PARQUET location '\" + oea.stage2np + \"/m365/aad/users'\")"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"#spark.sql(\"Drop table s2_m365_intune.aad_devices\")\r\n",
							"#spark.sql('create table if not exists s2_intune_aad.intune_aad_data as select * from s2_intune_aad.aad_devices d, s2_intune_aad.aad_users u where u.id = d.deviceId')"
						],
						"outputs": [],
						"execution_count": 8
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ContosoISD_example')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "spark3p1sm",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 4,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "4",
						"spark.dynamicAllocation.maxExecutors": "4"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/7b9a4896-4541-483f-bdc7-d8f4ec6be3ee/resourceGroups/rg-oea-daihackathon/providers/Microsoft.Synapse/workspaces/syn-oea-daihackathon/bigDataPools/spark3p1sm",
						"name": "spark3p1sm",
						"type": "Spark",
						"endpoint": "https://syn-oea-daihackathon.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark3p1sm",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.1",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# ContosoISD Example\r\n",
							"This example demonstrates how to use the OEA framework and modules to process incoming data, perform data prep, and view the data in an example Power BI dashboard.\r\n",
							"\r\n",
							"# Running the example\r\n",
							"1) Select your spark pool in the \"Attach to\" dropdown list above.\r\n",
							"\r\n",
							"2) Click on \"Publish\" in the top nav bar (and wait a few seconds for the notification that says \"Publishing completed\").\r\n",
							"\r\n",
							"3) Click on \"Run all\" at the top of this tab (and wait for the processing to complete - which can take around 5 to 10 minutes).\r\n",
							"\r\n",
							"4) Open the dashboard in Power BI desktop and point it to your newly setup data lake (you can download the pbix from here: [techInequityDashboardContoso v2.pbix](https://github.com/microsoft/OpenEduAnalytics/blob/main/packages/ContosoISD/power_bi/techInequityDashboardContoso%20v2.pbix) )\r\n",
							"\r\n",
							"# More info\r\n",
							"See [OEA Solution Guide](https://github.com/microsoft/OpenEduAnalytics/blob/main/docs/OpenEduAnalyticsSolutionGuide.pdf) for more details on this example."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"%run /OEA_py"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"%run /example_modules_py"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"# 0) Initialize the OEA framework and modules needed.\r\n",
							"oea = OEA()\r\n",
							"m365 = M365(oea)\r\n",
							"contoso_sis = ContosoSIS(oea, 'contoso_sis', False)"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"# 1) Land data into stage1 of your data lake, from multiple source systems (this example copies in test data sets that came with the OEA installation).\r\n",
							"contoso_sis.copy_test_data_to_stage1()\r\n",
							"#m365.copy_test_data_to_stage1()"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"# 2) Process the raw data (csv format) from stage1 into stage2 (adds schema details and writes out in parquet format).\r\n",
							"#    [Note: we're not performing pseudonymization in this example, so everything is written to container stage2np.]\r\n",
							"m365.process_roster_data_from_stage1()\r\n",
							"contoso_sis.process_data_from_stage1()\r\n",
							"m365.process_activity_data_from_stage1()"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"# 3) Run additional prep on the data to create a unified dataset that can be used in a Power BI report\r\n",
							"\r\n",
							"# Process sectionmark data. Convert id values to use the Person.Id and Section.Id values set in the m365 data.\r\n",
							"sqlContext.registerDataFrameAsTable(spark.read.format('parquet').load(oea.stage2np + '/contoso_sis/studentsectionmark'), 'SectionMark')\r\n",
							"sqlContext.registerDataFrameAsTable(spark.read.format('parquet').load(oea.stage2np + '/m365/Person'), 'Person')\r\n",
							"sqlContext.registerDataFrameAsTable(spark.read.format('parquet').load(oea.stage2np + '/m365/PersonIdentifier'), 'PersonIdentifier')\r\n",
							"sqlContext.registerDataFrameAsTable(spark.read.format('parquet').load(oea.stage2np + '/m365/Section'), 'Section')\r\n",
							"df = spark.sql(\"select sm.id Id, p.Id PersonId, s.Id SectionId, cast(sm.numeric_grade_earned as int) NumericGrade, \\\r\n",
							"sm.alpha_grade_earned AlphaGrade, sm.is_final_grade IsFinalGrade, cast(sm.credits_attempted as int) CreditsAttempted, cast(sm.credits_earned as int) CreditsEarned, \\\r\n",
							"sm.grad_credit_type GraduationCreditType, sm.id ExternalId, CURRENT_TIMESTAMP CreateDate, CURRENT_TIMESTAMP LastModifiedDate, true IsActive \\\r\n",
							"from SectionMark sm, Person p, Section s \\\r\n",
							"where sm.student_id = p.ExternalId \\\r\n",
							"and sm.section_id = s.ExternalId\")\r\n",
							"df.write.format('parquet').mode('overwrite').save(oea.stage2np + '/ContosoISD/SectionMark')\r\n",
							"\r\n",
							"sqlContext.registerDataFrameAsTable(spark.read.format('parquet').load(oea.stage2np + '/contoso_sis/studentdemographics'), 'Demographics')\r\n",
							"df = spark.sql(\"select sd.SIS_ID ExternalId, p.Id PersonId, sd.FederalRaceCategory, sd.PrimaryLanguage, \\\r\n",
							" sd.ELLStatus, sd.SpecialEducation, sd.LowIncome, sd.City_Region, pi.Identifier \\\r\n",
							"from Demographics sd, Person p, PersonIdentifier pi \\\r\n",
							"where sd.SIS_ID = p.ExternalId \\\r\n",
							"and p.Id = pi.PersonId \\\r\n",
							"and pi.Identifier like '%@%'\")\r\n",
							"df.write.format('parquet').mode('overwrite').save(oea.stage2np + '/ContosoISD/StudentDemographics')\r\n",
							"\r\n",
							"# Repeat the above process, this time for student attendance\r\n",
							"# Convert id values to use the Person.Id, Org.Id and Section.Id values\r\n",
							"sqlContext.registerDataFrameAsTable(spark.read.format('parquet').load(oea.stage2np + '/contoso_sis/studentattendance'), 'Attendance')\r\n",
							"sqlContext.registerDataFrameAsTable(spark.read.format('parquet').load(oea.stage2np + '/m365/Org'), 'Org')\r\n",
							"df = spark.sql(\"select att.id Id, p.Id PersonId, att.school_year SchoolYear, o.Id OrgId, to_date(att.attendance_date,'MM/dd/yyyy') AttendanceDate, \\\r\n",
							"att.all_day AllDay, att.Period Period, s.Id SectionId, att.AttendanceCode AttendanceCode, att.PresenceFlag PresenceFlag, \\\r\n",
							"att.attendance_status AttendanceStatus, att.attendance_type AttendanceType, att.attendance_sequence AttendanceSequence \\\r\n",
							"from Attendance att, Org o, Person p, Section s \\\r\n",
							"where att.student_id = p.ExternalId \\\r\n",
							"and att.school_id = o.ExternalId \\\r\n",
							"and att.section_id = s.ExternalId\")\r\n",
							"df.write.format('parquet').mode('overwrite').save(oea.stage2np +'/ContosoISD/Attendance')\r\n",
							"\r\n",
							"# Add 'Department' column to Course (hardcoded to \"Math\" for this Contoso example)\r\n",
							"sqlContext.registerDataFrameAsTable(spark.read.format('parquet').load(oea.stage2np + '/m365/Course'), 'Course')\r\n",
							"df = spark.sql(\"select Id, Name, Code, Description, ExternalId, CreateDate, LastModifiedDate, IsActive, CalendarId, 'Math' Department from Course\")\r\n",
							"df.write.format('parquet').mode('overwrite').save(oea.stage2np + '/ContosoISD/Course')"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"# 4) Create spark db's that point to the data in the data lake to allow for connecting via Power BI through use of the Serverless SQL endpoint.\r\n",
							"\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.Activity using PARQUET location '\" + oea.stage2np + \"/m365/TechActivity'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.Calendar using PARQUET location '\" + oea.stage2np + \"/m365/Calendar'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.Org using PARQUET location '\" + oea.stage2np + \"/m365/Org'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.Person using PARQUET location '\" + oea.stage2np + \"/m365/Person'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.PersonIdentifier using PARQUET location '\" + oea.stage2np + \"/m365/PersonIdentifier'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.RefDefinition using PARQUET location '\" + oea.stage2np + \"/m365/RefDefinition'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.Section using PARQUET location '\" + oea.stage2np + \"/m365/Section'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.Session using PARQUET location '\" + oea.stage2np + \"/m365/Session'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.StaffOrgAffiliation using PARQUET location '\" + oea.stage2np + \"/m365/StaffOrgAffiliation'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.StaffSectionMembership using PARQUET location '\" + oea.stage2np + \"/m365/StaffSectionMembership'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.StudentOrgAffiliation using PARQUET location '\" + oea.stage2np + \"/m365/StudentOrgAffiliation'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.StudentSectionMembership using PARQUET location '\" + oea.stage2np + \"/m365/StudentSectionMembership'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.Course using PARQUET location '\" + oea.stage2np + \"/ContosoISD/Course'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.Attendance using PARQUET location '\" + oea.stage2np + \"/ContosoISD/Attendance'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.SectionMark using PARQUET location '\" + oea.stage2np + \"/ContosoISD/SectionMark'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.StudentDemographics using PARQUET location '\" + oea.stage2np + \"/ContosoISD/StudentDemographics'\")\r\n",
							"\r\n",
							"print(f\"Created spark db's.\\nYou can now open the 'techInequityDashboardContoso v2.pbix' dashboard and change the datasource to point to: {oea.serverless_sql_endpoint}\")"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Reset everything\r\n",
							"You can uncomment line 11 in the cell below and run the cell to reset everything and walk through the process again from the top.\r\n",
							"\r\n",
							"Note: remember to comment out line 11 again to prevent accidental resetting of the example"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"def reset_all_processing():\r\n",
							"    contoso_sis.delete_all_stages()\r\n",
							"    m365.delete_all_stages()\r\n",
							"    oea.rm_if_exists(oea.stage2np + '/ContosoISD')\r\n",
							"\r\n",
							"    oea.drop_db('s2_contoso_sis')\r\n",
							"    oea.drop_db('s2_contosoisd')\r\n",
							"    oea.drop_db('s2_m365')\r\n",
							"\r\n",
							"# Uncomment the following line and run this cell to reset everything if you want to walk through the process again.\r\n",
							"#reset_all_processing()"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"spark.sql(\"DROP TABLE if exists s2_m365_intune.StudentDemographics\")"
						],
						"outputs": [],
						"execution_count": 16
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Intune_Processor')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "spark3p1sm",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 4,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "4",
						"spark.dynamicAllocation.maxExecutors": "4"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/7b9a4896-4541-483f-bdc7-d8f4ec6be3ee/resourceGroups/rg-oea-daihackathon/providers/Microsoft.Synapse/workspaces/syn-oea-daihackathon/bigDataPools/spark3p1sm",
						"name": "spark3p1sm",
						"type": "Spark",
						"endpoint": "https://syn-oea-daihackathon.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark3p1sm",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.1",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"%run /OEA_py"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"%run /example_modules_py"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"class IntuneModule(BaseOEAModule):\r\n",
							"    # Defines the intune data processing module.\r\n",
							"    def __init__(self, oea, source_folder='m365'):\r\n",
							"\r\n",
							"        BaseOEAModule.__init__(self, oea, source_folder)\r\n",
							"\r\n",
							"        self.stage1np_devices = self.stage1np + '/intune/devices'\r\n",
							"\r\n",
							"        self.schemas['Intune_Devices'] = [['DeviceName', 'string', 'no-op'],\r\n",
							"                                    ['ManagedBy', 'string', 'no-op'],\r\n",
							"                                    ['Ownership', 'string', 'no-op'],\r\n",
							"                                    ['Compliance','string','no-op'],\r\n",
							"                                    ['OS', 'string', 'no-op'],\r\n",
							"                                    ['OSVersion', 'string', 'no-op'],\r\n",
							"                                    ['LastCheckIn', 'timestamp', 'no-op'],\r\n",
							"                                    ['PrimaryUserUPN', 'string', 'hash'],\r\n",
							"                                    ['DeviceID', 'string', 'hash']]\r\n",
							"\r\n",
							"    def process_devices_data_from_stage1(self):\r\n",
							"        logger.info(\"Processing intune reports data from: \" + self.stage1np)\r\n",
							"        spark_schema = self.oea.to_spark_schema(self.schemas['Intune_Devices'])\r\n",
							"        df = spark.read.csv(self.stage1np_devices + '/*.csv', header='true', schema=spark_schema)\r\n",
							"        df = df.dropDuplicates(['DeviceID'])\r\n",
							"        df.coalesce(1).write.format('parquet').mode('overwrite').option(\"mergeSchema\", \"true\").save(self.stage2np + '/intune/devices')\r\n",
							"        \r\n",
							"    def process_devices_data_from_stage2(self):\r\n",
							"        spark_schema = self.oea.to_spark_schema(self.schemas['Devices'])\r\n",
							"        df = spark.read.parquet(self.stage2np + '/intunes/devices/*.parquet', header='true', schema=spark_schema)\r\n",
							"        #sqlContext.registerDataFrameAsTable(spark.read.format('parquet').load(oea.stage2np + '/m365/Intunes/*'), 'Devices')\r\n",
							"        #df = spark.sql(\"select DeviceID,PrimaryUserUPN,LastCheckIn,OSVersion,OS,Ownership,ManagedBy,DeviceName from Devices\")\r\n",
							"        df.write.format('parquet').mode('overwrite').save(self.stage2np + '/m365/intunes/devices')\r\n",
							"\r\n",
							"\r\n",
							"\r\n",
							""
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"oea = OEA()\r\n",
							"intune = IntuneModule(oea)"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"intune.process_devices_data_from_stage1()"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"intune.process_devices_data_from_stage2()"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"#intune.create_stage2_db('parquet')\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.devices using PARQUET location '\" + oea.stage2np + \"/m365/intunes/devices'\")\r\n",
							""
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OEA_py')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"metadata": {
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "python"
					},
					"language_info": {
						"name": "python"
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"tags": [
								"parameters"
							]
						},
						"source": [
							"\r\n",
							"from delta.tables import DeltaTable\r\n",
							"from notebookutils import mssparkutils\r\n",
							"from pyspark.sql.types import StructType, StructField, StringType, IntegerType, DoubleType, ArrayType, TimestampType, BooleanType, ShortType\r\n",
							"from pyspark.sql import functions as F\r\n",
							"from pyspark.sql.utils import AnalysisException\r\n",
							"import logging\r\n",
							"import pandas as pd\r\n",
							"import sys\r\n",
							"import re\r\n",
							"import json\r\n",
							"import datetime\r\n",
							"import random\r\n",
							"import io\r\n",
							"\r\n",
							"logger = logging.getLogger('OEA')\r\n",
							"\r\n",
							"class OEA:\r\n",
							"    def __init__(self, storage_account='', instrumentation_key='', salt='', logging_level=logging.DEBUG):\r\n",
							"        if storage_account:\r\n",
							"            self.storage_account = storage_account\r\n",
							"        else:\r\n",
							"            oea_id = mssparkutils.env.getWorkspaceName()[8:] # extracts the OEA id for this OEA instance from the synapse workspace name (based on OEA naming convention)\r\n",
							"            self.storage_account = 'stoea' + oea_id # sets the name of the storage account based on OEA naming convention\r\n",
							"        self.serverless_sql_endpoint = mssparkutils.env.getWorkspaceName() + '-ondemand.sql.azuresynapse.net'\r\n",
							"        self._initialize_logger(instrumentation_key, logging_level)\r\n",
							"        self.salt = salt\r\n",
							"        self.stage1np = 'abfss://stage1np@' + self.storage_account + '.dfs.core.windows.net'\r\n",
							"        self.stage2np = 'abfss://stage2np@' + self.storage_account + '.dfs.core.windows.net'\r\n",
							"        self.stage2p = 'abfss://stage2p@' + self.storage_account + '.dfs.core.windows.net'\r\n",
							"        self.stage3np = 'abfss://stage3np@' + self.storage_account + '.dfs.core.windows.net'\r\n",
							"        self.stage3p = 'abfss://stage3p@' + self.storage_account + '.dfs.core.windows.net'\r\n",
							"        self.framework_path = 'abfss://oea-framework@' + self.storage_account + '.dfs.core.windows.net'\r\n",
							"\r\n",
							"        logger.debug(\"OEA initialized.\")\r\n",
							"\r\n",
							"    def _initialize_logger(self, instrumentation_key, logging_level):\r\n",
							"        logging.lastResort = None\r\n",
							"        # the logger will print an error like \"ValueError: I/O operation on closed file\" because we're trying to have log messages also print to stdout\r\n",
							"        # and apparently this causes issues on some of the spark executor nodes. The bottom line is that we don't want these logging errors to get printed in the notebook output.\r\n",
							"        logging.raiseExceptions = False\r\n",
							"        logger.setLevel(logging_level)\r\n",
							"\r\n",
							"        handler = logging.StreamHandler(sys.stdout)\r\n",
							"        handler.setLevel(logging_level)\r\n",
							"        formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\r\n",
							"        handler.setFormatter(formatter)\r\n",
							"        logger.addHandler(handler) \r\n",
							"\r\n",
							"    def load(self, folder, table, stage=None, data_format='delta'):\r\n",
							"        \"\"\" Loads a dataframe based on the path specified in the given args \"\"\"\r\n",
							"        if stage is None: stage = self.stage2p\r\n",
							"        path = f\"{stage}/{folder}/{table}\"\r\n",
							"        try:\r\n",
							"            df = spark.read.load(f\"{stage}/{folder}/{table}\", format=data_format)\r\n",
							"            return df        \r\n",
							"        except AnalysisException as e:\r\n",
							"            raise ValueError(\"Failed to load. Are you sure you have the right path?\\nMore info below:\\n\" + str(e))\r\n",
							"\r\n",
							"    def load_from_stage1(self, path_and_filename, data_format='csv'):\r\n",
							"        \"\"\" Loads a dataframe with data from stage1, based on the path specified in the given args \"\"\"\r\n",
							"        path = f\"{self.stage1np}/{path_and_filename}\"\r\n",
							"        df = spark.read.load(path, format=data_format)\r\n",
							"        return df        \r\n",
							"\r\n",
							"    def load_sample_from_csv_file(self, path_and_filename, header=True, stage=None):\r\n",
							"        \"\"\" Loads a sample from the specified csv file and returns a pandas dataframe.\r\n",
							"            Ex: print(load_sample_from_csv_file('/student_data/students.csv'))\r\n",
							"        \"\"\"\r\n",
							"        if stage is None: stage = self.stage1np\r\n",
							"        csv_str = mssparkutils.fs.head(f\"{stage}/{path_and_filename}\") # https://docs.microsoft.com/en-us/azure/synapse-analytics/spark/microsoft-spark-utilities?pivots=programming-language-python#preview-file-content\r\n",
							"        complete_lines = re.match(r\".*\\n\", csv_str, re.DOTALL).group(0)\r\n",
							"        if header: header = 0 # for info on why this is needed: https://pandas.pydata.org/pandas-docs/dev/reference/api/pandas.read_csv.html\r\n",
							"        else: header = None\r\n",
							"        pdf = pd.read_csv(io.StringIO(complete_lines), sep=',', header=header)\r\n",
							"        return pdf\r\n",
							"\r\n",
							"    def print_stage(self, path):\r\n",
							"        \"\"\" Prints out the highlevel contents of the specified stage.\"\"\"\r\n",
							"        msg = path + \"\\n\"\r\n",
							"        folders = self.get_folders(path)\r\n",
							"        for folder_name in folders:\r\n",
							"            entities = self.get_folders(path + '/' + folder_name)\r\n",
							"            msg += f\"{folder_name}: {entities}\\n\"\r\n",
							"        print(msg)            \r\n",
							"\r\n",
							"    def fix_column_names(self, df):\r\n",
							"        \"\"\" Fix column names to satisfy the Parquet naming requirements by substituting invalid characters with an underscore. \"\"\"\r\n",
							"        df_with_valid_column_names = df.select([F.col(col).alias(re.sub(\"[ ,;{}()\\n\\t=]+\", \"_\", col)) for col in df.columns])\r\n",
							"        return df_with_valid_column_names\r\n",
							"\r\n",
							"    def to_spark_schema(self, schema):#: list[list[str]]):\r\n",
							"        \"\"\" Creates a spark schema from a schema specified in the OEA schema format. \r\n",
							"            Example:\r\n",
							"            schemas['Person'] = [['Id','string','hash'],\r\n",
							"                                    ['CreateDate','timestamp','no-op'],\r\n",
							"                                    ['LastModifiedDate','timestamp','no-op']]\r\n",
							"            to_spark_schema(schemas['Person'])\r\n",
							"        \"\"\"\r\n",
							"        fields = []\r\n",
							"        for col_name, dtype, op in schema:\r\n",
							"            fields.append(StructField(col_name, globals()[dtype.lower().capitalize() + \"Type\"](), True))\r\n",
							"        spark_schema = StructType(fields)\r\n",
							"        return spark_schema\r\n",
							"\r\n",
							"    def pseudonymize(self, df, schema): #: list[list[str]]):\r\n",
							"        \"\"\" Performs pseudonymization of the given dataframe based on the provided schema.\r\n",
							"            For example, if the given df is for an entity called person, \r\n",
							"            2 dataframes will be returned, one called person that has hashed ids and masked fields, \r\n",
							"            and one called person_lookup that contains the original person_id, person_id_pseudo,\r\n",
							"            and the non-masked values for columns marked to be masked.\"\"\"\r\n",
							"        \r\n",
							"        df_pseudo = df_lookup = df\r\n",
							"\r\n",
							"        for col_name, dtype, op in schema:\r\n",
							"            if op == \"hash-no-lookup\" or op == \"hnl\":\r\n",
							"                # This means that the lookup can be performed against a different table so no lookup is needed.\r\n",
							"                df_pseudo = df_pseudo.withColumn(col_name, F.sha2(F.concat(F.col(col_name), F.lit(self.salt)), 256)).withColumnRenamed(col_name, col_name + \"_pseudonym\")\r\n",
							"                df_lookup = df_lookup.drop(col_name)           \r\n",
							"            elif op == \"hash\" or op == 'h':\r\n",
							"                df_pseudo = df_pseudo.withColumn(col_name, F.sha2(F.concat(F.col(col_name), F.lit(self.salt)), 256)).withColumnRenamed(col_name, col_name + \"_pseudonym\")\r\n",
							"                df_lookup = df_lookup.withColumn(col_name + \"_pseudonym\", F.sha2(F.concat(F.col(col_name), F.lit(self.salt)), 256))\r\n",
							"            elif op == \"mask\" or op == 'm':\r\n",
							"                df_pseudo = df_pseudo.withColumn(col_name, F.lit('*'))\r\n",
							"            elif op == \"no-op\" or op == 'x':\r\n",
							"                df_lookup = df_lookup.drop(col_name)\r\n",
							"\r\n",
							"        df_pseudo = self.fix_column_names(df_pseudo)\r\n",
							"        df_lookup = self.fix_column_names(df_lookup)\r\n",
							"\r\n",
							"        return (df_pseudo, df_lookup)\r\n",
							"\r\n",
							"    # Returns true if the path exists\r\n",
							"    def path_exists(self, path):\r\n",
							"        tableExists = False\r\n",
							"        try:\r\n",
							"            items = mssparkutils.fs.ls(path)\r\n",
							"            tableExists = True\r\n",
							"        except Exception as e:\r\n",
							"            # This Exception comes as a generic Py4JJavaError that occurs when the path specified is not found.\r\n",
							"            pass\r\n",
							"        return tableExists\r\n",
							"\r\n",
							"    def ls(self, path):\r\n",
							"        folders = []\r\n",
							"        files = []\r\n",
							"        try:\r\n",
							"            items = mssparkutils.fs.ls(path)\r\n",
							"            for item in items:\r\n",
							"                if item.isFile:\r\n",
							"                    files.append(item.name)\r\n",
							"                elif item.isDir:\r\n",
							"                    folders.append(item.name)\r\n",
							"        except Exception as e:\r\n",
							"            logger.warning(\"[OEA] Could not peform ls on specified path: \" + path + \"\\nThis may be because the path does not exist.\")\r\n",
							"        return (folders, files)\r\n",
							"\r\n",
							"    def print_stage(self, path):\r\n",
							"        print(path)\r\n",
							"        folders = self.get_folders(path)\r\n",
							"        for folder_name in folders:\r\n",
							"            entities = self.get_folders(path + '/' + folder_name)\r\n",
							"            print(f\"{folder_name}: {entities}\")\r\n",
							"\r\n",
							"    # Return the list of folders found in the given path.\r\n",
							"    def get_folders(self, path):\r\n",
							"        dirs = []\r\n",
							"        try:\r\n",
							"            items = mssparkutils.fs.ls(path)\r\n",
							"            for item in items:\r\n",
							"                #print(item.name, item.isDir, item.isFile, item.path, item.size)\r\n",
							"                if item.isDir:\r\n",
							"                    dirs.append(item.name)\r\n",
							"        except Exception as e:\r\n",
							"            logger.warning(\"[OEA] Could not get list of folders in specified path: \" + path + \"\\nThis may be because the path does not exist.\")\r\n",
							"        return dirs\r\n",
							"\r\n",
							"    # Remove a folder if it exists (defaults to use of recursive removal).\r\n",
							"    def rm_if_exists(self, path, recursive_remove=True):\r\n",
							"        try:\r\n",
							"            mssparkutils.fs.rm(path, recursive_remove)\r\n",
							"        except Exception as e:\r\n",
							"            pass\r\n",
							"\r\n",
							"    def pop_from_path(self, path):\r\n",
							"        \"\"\" Pops the last arg in a path and returns the path and the last arg as a tuple.\r\n",
							"            pop_from_path('abfss://stage2@xyz.dfs.core.windows.net/ms_insights/test.csv') # returns ('abfss://stage2@xyz.dfs.core.windows.net/ms_insights', 'test.csv')\r\n",
							"        \"\"\"\r\n",
							"        m = re.match(r\"(.*)\\/([^/]+)\", path)\r\n",
							"        return (m.group(1), m.group(2))\r\n",
							"\r\n",
							"    def parse_source_path(self, path):\r\n",
							"        \"\"\" Parses a path that looks like this: abfss://stage2@stoeacisd3ggimpl3.dfs.core.windows.net/ms_insights\r\n",
							"            and returns a dictionary like this: {'stage_num': '2', 'ss': 'ms_insights'}\r\n",
							"            Note that it will also return a 'stage_num' of 2 if the path is stage2p - this is by design because the spark db with the s2 prefix will be used for data in stage2 and stage2p.\r\n",
							"        \"\"\"\r\n",
							"        m = re.match(r\".*:\\/\\/stage(?P<stage_num>\\d+)[n]?[p]?@[^/]+\\/(?P<ss>[^/]+)\", path)\r\n",
							"        return m.groupdict()\r\n",
							"    \r\n",
							"    def create_db(self, source_path, source_format='DELTA'):\r\n",
							"        \"\"\" Creates a spark db based on the given path (assumes that every folder in the given path is a table).\r\n",
							"            Note that a spark db that points to source data in the delta format can't be queried via SQL serverless pool. More info here: https://docs.microsoft.com/en-us/azure/synapse-analytics/sql/resources-self-help-sql-on-demand#delta-lake\r\n",
							"        \"\"\"\r\n",
							"        source_info = self.parse_source_path(source_path)\r\n",
							"        db_name = f\"s{source_info['stage_num']}_{source_info['ss']}\"\r\n",
							"        spark.sql(f\"CREATE DATABASE IF NOT EXISTS {db_name}\")\r\n",
							"        dirs = self.get_folders(source_path)\r\n",
							"        for table_name in dirs:\r\n",
							"            spark.sql(f\"create table if not exists {db_name}.{table_name} using {source_format} location '{source_path}/{table_name}'\")\r\n",
							"        result = \"Database created: \" + db_name\r\n",
							"        logger.info(result)\r\n",
							"        return result\r\n",
							"\r\n",
							"    def drop_db(self, db_name):\r\n",
							"        \"\"\" Drop all tables in a db, then drop the db. \"\"\"\r\n",
							"        df = spark.sql('SHOW TABLES FROM ' + db_name)\r\n",
							"        for row in df.rdd.collect():\r\n",
							"            spark.sql(f\"DROP TABLE IF EXISTS {db_name}.{row['tableName']}\")\r\n",
							"        spark.sql(f\"DROP DATABASE {db_name}\")\r\n",
							"        result = \"Database dropped: \" + db_name\r\n",
							"        logger.info(result)\r\n",
							"        return result         \r\n",
							"\r\n",
							"    # List installed packages\r\n",
							"    def list_packages(self):\r\n",
							"        import pkg_resources\r\n",
							"        for d in pkg_resources.working_set:\r\n",
							"            print(d)\r\n",
							"\r\n",
							"    def print_schema_starter(self, entity_name, df):\r\n",
							"        \"\"\" Prints a starter schema that can be modified as needed when developing the oea schema for a new module. \"\"\"\r\n",
							"        st = f\"self.schemas['{entity_name}'] = [\"\r\n",
							"        for col in df.schema:\r\n",
							"            st += f\"['{col.name}', '{str(col.dataType)[:-4].lower()}', 'no-op'],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\"\r\n",
							"        return st[:-11] + ']'\r\n",
							"\r\n",
							"    def write_dict_as_csv(data, folder, filename, container=None):\r\n",
							"        \"\"\" Writes a dictionary as a csv to the specified location. This is helpful when creating test data sets and landing them in stage1np. \"\"\"\r\n",
							"        if container == None: container = self.stage1np\r\n",
							"        pdf = pd.DataFrame(data)\r\n",
							"        mssparkutils.fs.put(f\"{container}/{folder}/{filename}\", pdf.to_csv(index=False), True) # True indicates overwrite mode  \r\n",
							"\r\n",
							"class BaseOEAModule:\r\n",
							"    \"\"\" Provides data processing methods for Contoso SIS data (the student information system for the fictional Contoso school district).  \"\"\"\r\n",
							"    def __init__(self, oea, source_folder, pseudonymize = True):\r\n",
							"        self.pseudonymize = pseudonymize\r\n",
							"        self.oea = oea\r\n",
							"        self.stage1np = f\"{oea.stage1np}/{source_folder}\"\r\n",
							"        self.stage2np = f\"{oea.stage2np}/{source_folder}\"\r\n",
							"        self.stage2p = f\"{oea.stage2p}/{source_folder}\"\r\n",
							"        self.stage3np = f\"{oea.stage3np}/{source_folder}\"\r\n",
							"        self.stage3p = f\"{oea.stage3p}/{source_folder}\"\r\n",
							"        self.module_path = f\"{oea.framework_path}/modules/{source_folder}\"\r\n",
							"        self.schemas = {}\r\n",
							"   \r\n",
							"    def _process_entity_from_stage1(self, entity_name, format='csv', write_mode='overwrite', header='true'):\r\n",
							"        spark_schema = self.oea.to_spark_schema(self.schemas[entity_name])\r\n",
							"        df = spark.read.format(format).load(f\"{self.stage1np}/{entity_name}\", header=header, schema=spark_schema)\r\n",
							"\r\n",
							"        if self.pseudonymize:\r\n",
							"            df_pseudo, df_lookup = self.oea.pseudonymize(df, self.schemas[entity_name])\r\n",
							"            df_pseudo.write.format('delta').mode(write_mode).save(f\"{self.stage2p}/{entity_name}\")\r\n",
							"            if len(df_lookup.columns) > 0:\r\n",
							"                df_lookup.write.format('delta').mode(write_mode).save(f\"{self.stage2np}/{entity_name}_lookup\")\r\n",
							"        else:\r\n",
							"            df = self.oea.fix_column_names(df)   \r\n",
							"            df.write.format('delta').mode(write_mode).save(f\"{self.stage2np}/{entity_name}\")\r\n",
							"\r\n",
							"    def delete_stage1(self):\r\n",
							"        self.oea.rm_if_exists(self.stage1np)\r\n",
							"\r\n",
							"    def delete_stage2(self):\r\n",
							"        self.oea.rm_if_exists(self.stage2np)\r\n",
							"        self.oea.rm_if_exists(self.stage2p)\r\n",
							"\r\n",
							"    def delete_stage3(self):\r\n",
							"        self.oea.rm_if_exists(self.stage3np)\r\n",
							"        self.oea.rm_if_exists(self.stage3p)                \r\n",
							"\r\n",
							"    def delete_all_stages(self):\r\n",
							"        self.delete_stage1()\r\n",
							"        self.delete_stage2()\r\n",
							"        self.delete_stage3()\r\n",
							"\r\n",
							"    def create_stage2_db(self, format='DELTA'):\r\n",
							"        self.oea.create_db(self.stage2p, format)\r\n",
							"        self.oea.create_db(self.stage2np, format)\r\n",
							"\r\n",
							"    def create_stage3_db(self, format='DELTA'):\r\n",
							"        self.oea.create_db(self.stage3p, format)\r\n",
							"        self.oea.create_db(self.stage3np, format)\r\n",
							"\r\n",
							"    def copy_test_data_to_stage1(self):\r\n",
							"        mssparkutils.fs.cp(self.module_path + '/test_data', self.stage1np, True)   \r\n",
							"\r\n",
							"class DataLakeWriter:\r\n",
							"    def __init__(self, root_destination):\r\n",
							"        self.root_destination = root_destination\r\n",
							"\r\n",
							"    def write(self, path_and_filename, data_str, format='csv'):\r\n",
							"        mssparkutils.fs.append(f\"{self.root_destination}/{path_and_filename}\", data_str, True) # Set the last parameter as True to create the file if it does not exist"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PreProcess1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "spark3p1sm",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 4,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "4",
						"spark.dynamicAllocation.maxExecutors": "4"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/7b9a4896-4541-483f-bdc7-d8f4ec6be3ee/resourceGroups/rg-oea-daihackathon/providers/Microsoft.Synapse/workspaces/syn-oea-daihackathon/bigDataPools/spark3p1sm",
						"name": "spark3p1sm",
						"type": "Spark",
						"endpoint": "https://syn-oea-daihackathon.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark3p1sm",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.1",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"import re\r\n",
							"import pandas as pd\r\n",
							"def check(email):\r\n",
							"    regex = '^[a-z0-9]+[\\._]?[a-z0-9]+[@]contoso.com$'     \r\n",
							"    if(re.search(regex,email)):   \r\n",
							"        return email   \r\n",
							"    else:\r\n",
							"        email.split('@')[0]\r\n",
							"        email = email.split('@')[0]+\"@contoso.com\"\r\n",
							"        return email\r\n",
							"\r\n",
							"        "
						],
						"outputs": [],
						"execution_count": 64
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"adls_path='abfss://%s@%s.dfs.core.windows.net/%s'%(\"stage1np\",\"stoeadaihackathon\",\"m365/AAD/users\")\r\n",
							"df=spark.read.option('header','true').option('delimiter',',').csv(adls_path+'/devices.csv')\r\n",
							"pdf = df.toPandas()"
						],
						"outputs": [],
						"execution_count": 65
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"listOfdomain = pdf['userPrincipalName']\r\n",
							"final_list = list(map(lambda x: check(x) ,listOfdomain ))\r\n",
							"pdf.drop('userPrincipalName',1,inplace=True)\r\n",
							"pdf['userPrincipalName'] = final_list"
						],
						"outputs": [],
						"execution_count": 66
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"pdf"
						],
						"outputs": [],
						"execution_count": 67
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							""
						]
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/RecombinantSISDataReplacer')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "spark3p1sm",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 4,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "4",
						"spark.dynamicAllocation.maxExecutors": "4"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/7b9a4896-4541-483f-bdc7-d8f4ec6be3ee/resourceGroups/rg-oea-daihackathon/providers/Microsoft.Synapse/workspaces/syn-oea-daihackathon/bigDataPools/spark3p1sm",
						"name": "spark3p1sm",
						"type": "Spark",
						"endpoint": "https://syn-oea-daihackathon.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark3p1sm",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.1",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"automaticScaleJobs": false
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {},
						"source": [
							"%run /OEA_py"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"%run /example_modules_py"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"%run /AAD_Processor"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"%run Intune_Processor"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from pyspark.sql.functions import monotonically_increasing_id, row_number\r\n",
							"from pyspark.sql.functions import col\r\n",
							"from pyspark.sql.window import Window\r\n",
							"\r\n",
							"class RecombinantDataReplacer(BaseOEAModule):\r\n",
							"    def __init__(self, oea, m365, aad, intune, source_folder='m365'):\r\n",
							"        BaseOEAModule.__init__(self, oea, source_folder)\r\n",
							"        self.stage1np_devices = self.stage1np + '/AAD/devices'\r\n",
							"        self.stage1np_users = self.stage1np + '/AAD/users'\r\n",
							"        self.stage1np_roster = self.stage1np + '/test_data/DIPData/Roster/'\r\n",
							"        self.stage1np_intune = self.stage1np + '/intune/devices/'\r\n",
							"\r\n",
							"    def replace_identifier_in_aad_devices_and_users_table(self):\r\n",
							"        personidentifier_path = self.stage1np_roster + '/PersonIdentifier.csv'\r\n",
							"        spark_schema = self.oea.to_spark_schema(m365.schemas['PersonIdentifier'])\r\n",
							"        personidentifier_df = spark.read.csv(personidentifier_path, header='false', schema=spark_schema)\r\n",
							"\r\n",
							"        person_path = self.stage1np_roster + '/Person.csv'\r\n",
							"        spark_schema = self.oea.to_spark_schema(m365.schemas['PersonIdentifier'])\r\n",
							"        person_df = spark.read.csv(personidentifier_path, header='false', schema=spark_schema)\r\n",
							"\r\n",
							"        aadusers_path = self.stage1np_users + \"/users.csv\"\r\n",
							"        spark_schema = self.oea.to_spark_schema(aad.schemas['AAD_Users'])\r\n",
							"        aadusers_df = spark.read.csv(aadusers_path, header='true')\r\n",
							"\r\n",
							"        aaddevices_path = self.stage1np_devices + \"/devices.csv\"\r\n",
							"        spark_schema = self.oea.to_spark_schema(aad.schemas['AAD_Devices'])\r\n",
							"        aaddevices_df = spark.read.csv(aaddevices_path, header='true')\r\n",
							"\r\n",
							"        intunedevices_path = self.stage1np_intune + \"/devices.csv\"\r\n",
							"        spark_schema = self.oea.to_spark_schema(intune.schemas['Intune_Devices'])\r\n",
							"        intunedevices_df = spark.read.csv(intunedevices_path, header='true')\r\n",
							"\r\n",
							"        #print(df.select(\"Identifier\").show())\r\n",
							"        aadusers_df = aadusers_df.limit(min(personidentifier_df.count(), aadusers_df.count()))\r\n",
							"\r\n",
							"        aadusers_df=aadusers_df.withColumn('row_index', row_number().over(Window.orderBy(monotonically_increasing_id())))\r\n",
							"        aaddevices_df=aaddevices_df.withColumn('row_index', row_number().over(Window.orderBy(monotonically_increasing_id())))\r\n",
							"        personidentifier_df=personidentifier_df.withColumn('row_index', row_number().over(Window.orderBy(monotonically_increasing_id())))\r\n",
							"        person_df=personidentifier_df.withColumn('row_index', row_number().over(Window.orderBy(monotonically_increasing_id())))\r\n",
							"        intunedevices_df=intunedevices_df.withColumn('row_index', row_number().over(Window.orderBy(monotonically_increasing_id())))\r\n",
							"\r\n",
							"        aadusers_df = aadusers_df.join(personidentifier_df, on=[\"row_index\"]).drop(\"row_index\")\r\n",
							"        aadusers_df = aadusers_df.select(\r\n",
							"            col(\"givenName\").alias(\"givenName\"),\r\n",
							"            col(\"surname\").alias(\"surname\"),\r\n",
							"            col(\"Identifier\").alias(\"userPrincipalName\"),\r\n",
							"            col(\"PersonId\").alias(\"id\")).filter(aadusers_df.Identifier.contains(\"@\"))\r\n",
							"        \r\n",
							"        aaddevices_df = aaddevices_df.join(personidentifier_df, on=[\"row_index\"]).drop(\"row_index\")\r\n",
							"\r\n",
							"        aaddevices_df = aaddevices_df.select(\r\n",
							"            col(\"EntryId\").alias(\"EntryId\"),\r\n",
							"            col(\"LastCheckIn\").alias(\"LastCheckIn\"),\r\n",
							"            col(\"DeviceId\").alias(\"DeviceId\"),\r\n",
							"            col(\"DeviceName\").alias(\"DeviceName\"),\r\n",
							"            col(\"Compliant\").alias(\"Compliant\"),\r\n",
							"            col(\"IsManaged\").alias(\"IsManaged\"),\r\n",
							"            col(\"OS\").alias(\"OS\"),\r\n",
							"            col(\"OSVersion\").alias(\"OSVersion\"),\r\n",
							"            col(\"PersonId\").alias(\"Ids\"),\r\n",
							"            col(\"Ownership\").alias(\"Ownership\"),\r\n",
							"            col(\"PersonId\").alias(\"OwnerIdentifier\")).filter(aaddevices_df.Identifier.contains(\"@\"))\r\n",
							"\r\n",
							"        intunedevices_df = intunedevices_df.join(personidentifier_df, on=[\"row_index\"]).drop(\"row_index\")\r\n",
							"        print(intunedevices_df.show())\r\n",
							"\r\n",
							"        #aadusers_df.coalesce(1).write.format('csv').mode('overwrite').option(\"mergeSchema\", \"true\").option(\"header\", \"true\").save(self.stage1np_users + '/sis_recombined/')\r\n",
							"        #aaddevices_df.coalesce(1).write.format('csv').mode('overwrite').option(\"mergeSchema\", \"true\").option(\"header\", \"true\").save(self.stage1np_devices + '/sis_recombined/')\r\n",
							"\r\n",
							"    def process_devices_and_users_data_from_stage1(self):        \r\n",
							"        logger.info(\"Processing Azure AD Device data from: \" + self.stage1np_devices+\"/sis_recombined/\")\r\n",
							"        df = spark.read.csv(self.stage1np_devices + '/sis_recombined/*.csv', header='true')\r\n",
							"        df = df.dropDuplicates(['DeviceId'])\r\n",
							"        df.coalesce(1).write.format('parquet').mode('overwrite').option(\"mergeSchema\", \"true\").save(self.stage2np + '/aad/devices')\r\n",
							"\r\n",
							"        logger.info(\"Processing Azure AD users data from: \" + self.stage1np_users+\"/sis_recombined/\")\r\n",
							"        spark_schema = self.oea.to_spark_schema(aad.schemas['AAD_Users'])\r\n",
							"        df = spark.read.csv(self.stage1np_users + '/sis_recombined/*.csv', header='true', schema=spark_schema)\r\n",
							"        df = df.dropDuplicates(['id'])\r\n",
							"        df.coalesce(1).write.format('parquet').mode('overwrite').option(\"mergeSchema\", \"true\").save(self.stage2np + '/aad/users')\r\n",
							""
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": 89
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"oea = OEA()\r\n",
							"m365 = M365(oea)\r\n",
							"aad = IntuneAADPackage(oea)\r\n",
							"intune = IntuneModule()\r\n",
							"replacer = RecombinantDataReplacer(oea, m365, aad, intune)\r\n",
							"replacer.replace_identifier_in_aad_devices_and_users_table()\r\n",
							"replacer.process_devices_and_users_data_from_stage1()"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# If doing a push to Test Db uncomment below line, and replace s2_m365_intune with s2_m365_intune_test\r\n",
							"#spark.sql('CREATE DATABASE IF NOT EXISTS s2_m365_intune_test')\r\n",
							"\r\n",
							"# Uncomment below 2 lines if doing a rerun\r\n",
							"#spark.sql(\"drop table s2_m365_intune.aad_devices\")\r\n",
							"spark.sql(\"drop table s2_m365_intune.aad_users\")\r\n",
							"\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.aad_devices using PARQUET location '\" + oea.stage2np + \"/m365/aad/devices'\")\r\n",
							"spark.sql(\"create table if not exists s2_m365_intune.aad_users using PARQUET location '\" + oea.stage2np + \"/m365/aad/users'\")"
						],
						"outputs": [],
						"execution_count": 93
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/example_modules_py')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "spark3p1sm",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 4,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "4",
						"spark.dynamicAllocation.maxExecutors": "4"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/7b9a4896-4541-483f-bdc7-d8f4ec6be3ee/resourceGroups/rg-oea-daihackathon/providers/Microsoft.Synapse/workspaces/syn-oea-daihackathon/bigDataPools/spark3p1sm",
						"name": "spark3p1sm",
						"type": "Spark",
						"endpoint": "https://syn-oea-daihackathon.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark3p1sm",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.1",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"class ContosoSIS(BaseOEAModule):\r\n",
							"    def __init__(self, oea, source_folder='contoso_sis', pseudonymize = True):\r\n",
							"        BaseOEAModule.__init__(self, oea, source_folder, pseudonymize)\r\n",
							"        self.schemas['studentattendance'] = [['id', 'string', 'no-op'],\r\n",
							"                                            ['student_id', 'string', 'hash-no-lookup'],\r\n",
							"                                            ['school_year', 'integer', 'no-op'],\r\n",
							"                                            ['school_id', 'string', 'no-op'],\r\n",
							"                                            ['attendance_date', 'timestamp', 'no-op'],\r\n",
							"                                            ['all_day', 'string', 'no-op'],\r\n",
							"                                            ['Period', 'short', 'no-op'],\r\n",
							"                                            ['section_id', 'string', 'no-op'],\r\n",
							"                                            ['AttendanceCode', 'string', 'no-op'],\r\n",
							"                                            ['PresenceFlag', 'boolean', 'no-op'],\r\n",
							"                                            ['attendance_status', 'string', 'no-op'],\r\n",
							"                                            ['attendance_type', 'string', 'no-op'],\r\n",
							"                                            ['attendance_sequence', 'short', 'no-op']]\r\n",
							"\r\n",
							"        self.schemas['studentsectionmark'] = [['id', 'string', 'no-op'],\r\n",
							"                                            ['student_id', 'string', 'hash-no-lookup'],\r\n",
							"                                            ['section_id', 'string', 'no-op'],\r\n",
							"                                            ['school_year', 'string', 'no-op'],\r\n",
							"                                            ['term_id', 'string', 'no-op'],\r\n",
							"                                            ['numeric_grade_earned', 'short', 'no-op'],\r\n",
							"                                            ['alpha_grade_earned', 'string', 'no-op'],\r\n",
							"                                            ['is_final_grade', 'string', 'no-op'],\r\n",
							"                                            ['credits_attempted', 'short', 'no-op'],\r\n",
							"                                            ['credits_earned', 'short', 'no-op'],\r\n",
							"                                            ['grad_credit_type', 'string', 'no-op']]\r\n",
							"        self.schemas['studentdemographics'] =   [['SIS_ID', 'string', 'no-op'],\r\n",
							"                                                ['FederalRaceCategory', 'string', 'no-op'],\r\n",
							"                                                ['PrimaryLanguage', 'string', 'no-op'],\r\n",
							"                                                ['ELLStatus','string','no-op'],\r\n",
							"                                                ['SpecialEducation', 'string', 'no-op'],\r\n",
							"                                                ['LowIncome','string', 'no-op'],\r\n",
							"                                                ['City_Region', 'string', 'no-op']]\r\n",
							"                                            \r\n",
							"    def process_data_from_stage1(self):\r\n",
							"        self._process_entity_from_stage1('studentattendance', 'csv', 'overwrite', 'true')\r\n",
							"        self._process_entity_from_stage1('studentsectionmark', 'csv', 'overwrite', 'true')\r\n",
							"        self._process_entity_from_stage1('studentdemographics', 'csv', 'overwrite', 'true')\r\n",
							"\r\n",
							"    def copy_test_data_to_stage1(self):\r\n",
							"        mssparkutils.fs.cp(self.module_path + '/test_data/studentattendance.csv', self.stage1np + '/studentattendance/studentattendance.csv', True)\r\n",
							"        mssparkutils.fs.cp(self.module_path + '/test_data/studentsectionmark.csv', self.stage1np + '/studentsectionmark/studentsectionmark.csv', True)\r\n",
							"        mssparkutils.fs.cp(self.module_path + '/test_data/studentdemographics.csv', self.stage1np + '/studentdemographics/studentdemographics.csv', True)\r\n",
							"        logger.debug(\"[OEA] Could not get list of folders in specified path\")\r\n",
							"\r\n",
							"class M365(BaseOEAModule):\r\n",
							"    \"\"\"\r\n",
							"    Provides data processing methods for MS Insights data v0.2 format.\r\n",
							"    \"\"\"\r\n",
							"\r\n",
							"    def __init__(self, oea, source_folder='m365'):\r\n",
							"        BaseOEAModule.__init__(self, oea, source_folder)\r\n",
							"\r\n",
							"        self.stage1np_activity = self.stage1np + '/DIPData/Activity/ApplicationUsage'\r\n",
							"        self.stage1np_roster = self.stage1np + '/DIPData/Roster'\r\n",
							"\r\n",
							"        self.schemas['Activity0p2'] = [['SignalType', 'string', 'no-op'],\r\n",
							"                                            ['StartTime', 'timestamp', 'no-op'],\r\n",
							"                                            ['UserAgent', 'string', 'no-op'],\r\n",
							"                                            ['SignalId', 'string', 'no-op'],\r\n",
							"                                            ['SISClassId', 'string', 'no-op'],\r\n",
							"                                            ['OfficeClassId', 'string', 'no-op'],\r\n",
							"                                            ['ChannelId', 'string', 'no-op'],\r\n",
							"                                            ['AppName', 'string', 'no-op'],\r\n",
							"                                            ['ActorId', 'string', 'hash-no-lookup'],\r\n",
							"                                            ['ActorRole', 'string', 'no-op'],\r\n",
							"                                            ['SchemaVersion', 'string', 'no-op'],\r\n",
							"                                            ['AssignmentId', 'string', 'no-op'],\r\n",
							"                                            ['SubmissionId', 'string', 'no-op'],\r\n",
							"                                            ['Action', 'string', 'no-op'],\r\n",
							"                                            ['AssginmentDueDate', 'string', 'no-op'],\r\n",
							"                                            ['ClassCreationDate', 'string', 'no-op'],\r\n",
							"                                            ['Grade', 'string', 'no-op'],\r\n",
							"                                            ['SourceFileExtension', 'string', 'no-op'],\r\n",
							"                                            ['MeetingDuration', 'string', 'no-op']]\r\n",
							"        self.schemas['Calendar'] = [['Id', 'string', 'no-op'],\r\n",
							"                                            ['Name', 'string', 'no-op'],\r\n",
							"                                            ['Description', 'string', 'no-op'],\r\n",
							"                                            ['SchoolYear', 'integer', 'no-op'],\r\n",
							"                                            ['IsCurrent', 'boolean', 'no-op'],\r\n",
							"                                            ['ExternalId', 'string', 'no-op'],\r\n",
							"                                            ['CreateDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['LastModifiedDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['IsActive', 'boolean', 'no-op'],\r\n",
							"                                            ['OrgId', 'string', 'no-op']]\r\n",
							"        self.schemas['Course'] = [['Id', 'string', 'no-op'],\r\n",
							"                                            ['Name', 'string', 'no-op'],\r\n",
							"                                            ['Code', 'string', 'no-op'],\r\n",
							"                                            ['Description', 'string', 'no-op'],\r\n",
							"                                            ['ExternalId', 'string', 'no-op'],\r\n",
							"                                            ['CreateDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['LastModifiedDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['IsActive', 'boolean', 'no-op'],\r\n",
							"                                            ['CalendarId', 'string', 'no-op']]\r\n",
							"        self.schemas['Org'] = [['Id', 'string', 'no-op'],\r\n",
							"                                            ['Name', 'string', 'no-op'],\r\n",
							"                                            ['Identifier', 'string', 'no-op'],\r\n",
							"                                            ['ExternalId', 'string', 'no-op'],\r\n",
							"                                            ['CreateDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['LastModifiedDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['IsActive', 'boolean', 'no-op'],\r\n",
							"                                            ['ParentOrgId', 'string', 'no-op'],\r\n",
							"                                            ['RefOrgTypeId', 'string', 'no-op'],\r\n",
							"                                            ['SourceSystemId', 'string', 'no-op']]\r\n",
							"        self.schemas['Person'] = [['Id', 'string', 'hash'],\r\n",
							"                                            ['FirstName', 'string', 'mask'],\r\n",
							"                                            ['MiddleName', 'string', 'mask'],\r\n",
							"                                            ['LastName', 'string', 'mask'],\r\n",
							"                                            ['GenerationCode', 'string', 'no-op'],\r\n",
							"                                            ['Prefix', 'string', 'no-op'],\r\n",
							"                                            ['EnabledUser', 'string', 'no-op'],\r\n",
							"                                            ['ExternalId', 'string', 'hash'],\r\n",
							"                                            ['CreateDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['LastModifiedDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['IsActive', 'boolean', 'no-op'],\r\n",
							"                                            ['SourceSystemId', 'string', 'no-op']]\r\n",
							"        self.schemas['PersonIdentifier'] = [['Id', 'string', 'hash'],\r\n",
							"                                            ['Identifier', 'string', 'hash'],\r\n",
							"                                            ['Description', 'string', 'no-op'],\r\n",
							"                                            ['RefIdentifierTypeId', 'string', 'no-op'],\r\n",
							"                                            ['ExternalId', 'string', 'hash'],\r\n",
							"                                            ['CreateDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['LastModifiedDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['IsActive', 'boolean', 'no-op'],\r\n",
							"                                            ['PersonId', 'string', 'hash'],\r\n",
							"                                            ['SourceSystemId', 'string', 'no-op']]\r\n",
							"        self.schemas['RefDefinition'] = [['Id', 'string', 'no-op'],\r\n",
							"                                            ['RefType', 'string', 'no-op'],\r\n",
							"                                            ['Namespace', 'string', 'no-op'],\r\n",
							"                                            ['Code', 'string', 'no-op'],\r\n",
							"                                            ['SortOrder', 'integer', 'no-op'],\r\n",
							"                                            ['Description', 'string', 'no-op'],\r\n",
							"                                            ['IsActive', 'boolean', 'no-op']]\r\n",
							"        self.schemas['Section'] = [['Id', 'string', 'no-op'],\r\n",
							"                                            ['Name', 'string', 'no-op'],\r\n",
							"                                            ['Code', 'string', 'no-op'],\r\n",
							"                                            ['Location', 'string', 'no-op'],\r\n",
							"                                            ['ExternalId', 'string', 'no-op'],\r\n",
							"                                            ['CreateDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['LastModifiedDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['IsActive', 'boolean', 'no-op'],\r\n",
							"                                            ['CourseId', 'string', 'no-op'],\r\n",
							"                                            ['RefSectionTypeId', 'string', 'no-op'],\r\n",
							"                                            ['SessionId', 'string', 'no-op'],\r\n",
							"                                            ['OrgId', 'string', 'no-op']]\r\n",
							"        self.schemas['Session'] = [['Id', 'string', 'no-op'],\r\n",
							"                                            ['Name', 'string', 'no-op'],\r\n",
							"                                            ['BeginDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['EndDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['ExternalId', 'string', 'no-op'],\r\n",
							"                                            ['CreateDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['LastModifiedDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['IsActive', 'boolean', 'no-op'],\r\n",
							"                                            ['CalendarId', 'string', 'no-op'],\r\n",
							"                                            ['ParentSessionId', 'string', 'no-op'],\r\n",
							"                                            ['RefSessionTypeId', 'string', 'no-op']]\r\n",
							"        self.schemas['StaffOrgAffiliation'] = [['Id', 'string', 'no-op'],\r\n",
							"                                            ['IsPrimary', 'boolean', 'no-op'],\r\n",
							"                                            ['EntryDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['ExitDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['ExternalId', 'string', 'no-op'],\r\n",
							"                                            ['CreateDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['LastModifiedDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['IsActive', 'boolean', 'no-op'],\r\n",
							"                                            ['OrgId', 'string', 'no-op'],\r\n",
							"                                            ['PersonId', 'string', 'hash'],\r\n",
							"                                            ['RefStaffOrgRoleId', 'string', 'no-op']]\r\n",
							"        self.schemas['StaffSectionMembership'] = [['Id', 'string', 'no-op'],\r\n",
							"                                            ['IsPrimaryStaffForSection', 'boolean', 'no-op'],\r\n",
							"                                            ['EntryDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['ExitDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['ExternalId', 'string', 'no-op'],\r\n",
							"                                            ['CreateDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['LastModifiedDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['IsActive', 'boolean', 'no-op'],\r\n",
							"                                            ['PersonId', 'string', 'hash'],\r\n",
							"                                            ['RefStaffSectionRoleId', 'string', 'no-op'],\r\n",
							"                                            ['SectionId', 'string', 'no-op']]\r\n",
							"        self.schemas['StudentOrgAffiliation'] = [['Id', 'string', 'no-op'],\r\n",
							"                                            ['IsPrimary', 'boolean', 'no-op'],\r\n",
							"                                            ['EntryDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['ExitDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['ExternalId', 'string', 'no-op'],\r\n",
							"                                            ['CreateDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['LastModifiedDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['IsActive', 'boolean', 'no-op'],\r\n",
							"                                            ['OrgId', 'string', 'no-op'],\r\n",
							"                                            ['PersonId', 'string', 'hash'],\r\n",
							"                                            ['RefGradeLevelId', 'string', 'no-op'],\r\n",
							"                                            ['RefStudentOrgRoleId', 'string', 'no-op'],\r\n",
							"                                            ['RefEnrollmentStatusId', 'string', 'no-op']]\r\n",
							"        self.schemas['StudentSectionMembership'] = [['Id', 'string', 'no-op'],\r\n",
							"                                            ['EntryDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['ExitDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['ExternalId', 'string', 'no-op'],\r\n",
							"                                            ['CreateDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['LastModifiedDate', 'timestamp', 'no-op'],\r\n",
							"                                            ['IsActive', 'boolean', 'no-op'],\r\n",
							"                                            ['PersonId', 'string', 'hash'],\r\n",
							"                                            ['RefGradeLevelWhenCourseTakenId', 'string', 'no-op'],\r\n",
							"                                            ['RefStudentSectionRoleId', 'string', 'no-op'],\r\n",
							"                                            ['SectionId', 'string', 'no-op']]\r\n",
							"    \r\n",
							"    def process_activity_data_from_stage1(self):\r\n",
							"        \"\"\" Processes activity data from stage1 into stage2 using structured streaming. \r\n",
							"            https://spark.apache.org/docs/latest/structured-streaming-programming-guide.html\r\n",
							"        \"\"\"\r\n",
							"        logger.info(\"Processing ms_insights activity data from: \" + self.stage1np_activity)\r\n",
							"\r\n",
							"        spark_schema = self.oea.to_spark_schema(self.schemas['Activity0p2'])\r\n",
							"        df = spark.read.csv(self.stage1np_activity + '/*.csv', header='false', schema=spark_schema) \r\n",
							"        sqlContext.registerDataFrameAsTable(df, 'Activity')\r\n",
							"        sqlContext.registerDataFrameAsTable(spark.read.format('parquet').load(self.oea.stage2np + '/m365/PersonIdentifier'), 'PersonIdentifier')\r\n",
							"        sqlContext.registerDataFrameAsTable(spark.read.format('parquet').load(self.oea.stage2np + '/m365/RefDefinition'), 'RefDefinition')\r\n",
							"\r\n",
							"        df = spark.sql( \r\n",
							"            \"select act.SignalType, act.StartTime, act.UserAgent, act.SignalId, act.SISClassId, act.OfficeClassId, act.ChannelId, \\\r\n",
							"            act.AppName, act.ActorId, act.ActorRole, act.SchemaVersion, act.AssignmentId, act.SubmissionId, act.Action, act.AssginmentDueDate, \\\r\n",
							"            act.ClassCreationDate, act.Grade, act.SourceFileExtension, act.MeetingDuration, pi.PersonId \\\r\n",
							"            from PersonIdentifier pi, RefDefinition rd, Activity act \\\r\n",
							"            where \\\r\n",
							"                pi.RefIdentifierTypeId = rd.Id \\\r\n",
							"                and rd.RefType = 'RefIdentifierType' \\\r\n",
							"                and rd.Code = 'ActiveDirectoryId' \\\r\n",
							"                and pi.Identifier = act.ActorId\")\r\n",
							"\r\n",
							"        df = df.dropDuplicates(['SignalId'])\r\n",
							"        df = df.withColumn('year', F.year(F.col('StartTime'))).withColumn('month', F.month(F.col('StartTime')))\r\n",
							"        df = self.oea.fix_column_names(df)\r\n",
							"        df.write.format('parquet').mode('overwrite').option(\"mergeSchema\", \"true\").save(self.stage2np + '/TechActivity')\r\n",
							"\r\n",
							"    def reset_activity_processing(self):\r\n",
							"        \"\"\" Resets all TechActivity processing. This is intended for use during initial testing - use with caution. \"\"\"\r\n",
							"        self.oea.rm_if_exists(self.stage2p + '/TechActivity')\r\n",
							"        self.oea.rm_if_exists(self.stage2np + '/TechActivity')\r\n",
							"        logger.info(f\"Deleted TechActivity from stage2\")  \r\n",
							"\r\n",
							"    def _process_roster_entity(self, path):\r\n",
							"        try:\r\n",
							"            base_path, filename = self.oea.pop_from_path(path)\r\n",
							"            entity = filename[:-4]\r\n",
							"            logger.debug(f\"Processing roster entity: path={path}, entity={entity}\")\r\n",
							"            spark_schema = self.oea.to_spark_schema(self.schemas[entity])\r\n",
							"            df = spark.read.csv(path, header='false', schema=spark_schema)\r\n",
							"            df = self.oea.fix_column_names(df)\r\n",
							"            df.write.format('parquet').mode('overwrite').option(\"mergeSchema\", \"true\").save(self.stage2np + '/' + entity)\r\n",
							"\r\n",
							"        except (AnalysisException) as error:\r\n",
							"            logger.exception(str(error))\r\n",
							"\r\n",
							"    def process_roster_data_from_stage1(self):\r\n",
							"        \"\"\" Processes all roster data in stage1 and writes out to stage2 and stage2p \"\"\"\r\n",
							"        logger.info(\"Processing ms_insights roster data from: \" + self.stage1np)\r\n",
							"\r\n",
							"        items = mssparkutils.fs.ls(self.stage1np_roster)\r\n",
							"        #print(items)\r\n",
							"        for item in items:\r\n",
							"            if item.isFile:\r\n",
							"                self._process_roster_entity(item.path)\r\n",
							"\r\n",
							"    def reset_roster_processing(self):\r\n",
							"        \"\"\" Resets all stage1 to stage2 processing of roster data. \"\"\"\r\n",
							"        # cleanup stage2np\r\n",
							"        if self.oea.path_exists(self.stage2np):\r\n",
							"            # Delete roster tables (everything other than TechActivity)\r\n",
							"            items = mssparkutils.fs.ls(self.stage2np)\r\n",
							"            #print(file.name, file.isDir, file.isFile, file.path, file.size)\r\n",
							"            for item in items:\r\n",
							"                if item.name != 'TechActivity':\r\n",
							"                    mssparkutils.fs.rm(item.path, True)\r\n",
							"        # cleanup stage2p\r\n",
							"        if self.oea.path_exists(self.stage2p):\r\n",
							"            # Delete roster tables (everything other than TechActivity)\r\n",
							"            items = mssparkutils.fs.ls(self.stage2p)\r\n",
							"            #print(file.name, file.isDir, file.isFile, file.path, file.size)\r\n",
							"            for item in items:\r\n",
							"                if item.name != 'TechActivity':\r\n",
							"                    mssparkutils.fs.rm(item.path, True)    \r\n",
							"  \r\n",
							"\r\n",
							""
						],
						"outputs": [],
						"execution_count": 1
					}
				]
			},
			"dependsOn": []
		}
	]
}